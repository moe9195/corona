{"ast":null,"code":"import _regeneratorRuntime from \"/home/moe/Development/corona/online-retail-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/moe/Development/corona/online-retail-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/moe/Development/corona/online-retail-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/moe/Development/corona/online-retail-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/moe/Development/corona/online-retail-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/moe/Development/corona/online-retail-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/moe/Development/corona/online-retail-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/moe/Development/corona/online-retail-dashboard/src/components/Counter.js\";\nimport React, { Component } from \"react\";\nimport countryData from \"./countries\";\nimport axios from \"axios\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Loading from \"./Loading\";\nimport { connect } from \"react-redux\";\nimport { setData as _setData } from \"../redux/actions\";\nvar MENA = countryData[1];\nvar allCountries = countryData[3];\nvar dictionary = countryData[4];\nvar instance1 = axios.create({\n  baseURL: \"https://covid19.mathdro.id/api/\",\n  loading: true\n});\nvar instance2 = axios.create({\n  baseURL: \"https://covidapi.info/api/v1/global/latest\",\n  loading: true\n});\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: null,\n      dataCountries: null,\n      loading: true,\n      region: true\n    };\n\n    _this.changeRegion = function () {\n      _this.setState({\n        region: !_this.state.region\n      });\n    };\n\n    _this.fetchData =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response1, data1, response2, data2;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return instance1.get(\"\");\n\n            case 3:\n              response1 = _context.sent;\n              data1 = response1.data;\n              _context.next = 7;\n              return instance2.get(\"\");\n\n            case 7:\n              response2 = _context.sent;\n              data2 = response2.data;\n\n              _this.setState({\n                data: data1,\n                dataCountries: data2,\n                loading: false\n              });\n\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 12]]);\n    }));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.fetchData();\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    _this.sortCountriesConfirmed = function (items) {\n      var cleaned = items.map(function (country) {\n        var countryName = Object.keys(country)[0];\n        return {\n          name: dictionary[countryName],\n          confirmed: country[countryName].confirmed\n        };\n      });\n      var confirmed = cleaned.sort(function (a, b) {\n        return b.confirmed - a.confirmed;\n      });\n      return [confirmed];\n    };\n\n    _this.sortCountriesRecovered = function (items) {\n      var cleaned = items.map(function (country) {\n        var countryName = Object.keys(country)[0];\n        return {\n          name: dictionary[countryName],\n          recovered: country[countryName].recovered\n        };\n      });\n      var recovered = cleaned.sort(function (a, b) {\n        return b.recovered - a.recovered;\n      });\n      return [recovered];\n    };\n\n    _this.sortCountriesDeaths = function (items) {\n      var cleaned = items.map(function (country) {\n        var countryName = Object.keys(country)[0];\n        return {\n          name: dictionary[countryName],\n          deaths: country[countryName].deaths\n        };\n      });\n      var deaths = cleaned.sort(function (a, b) {\n        return b.deaths - a.deaths;\n      });\n      return [deaths];\n    };\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.props.setData(this.state.dataCountries);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var confirmedRows = React.createElement(React.Fragment, null);\n      var deadRows = React.createElement(React.Fragment, null);\n      var recoveredRows = React.createElement(React.Fragment, null);\n      var confirmedRowsMENA = React.createElement(React.Fragment, null);\n      var deadRowsMENA = React.createElement(React.Fragment, null);\n      var recoveredRowsMENA = React.createElement(React.Fragment, null);\n\n      if (!this.state.loading) {\n        var sortedDataConfirmed = this.sortCountriesConfirmed(this.state.dataCountries.result);\n        var sortedDataDeaths = this.sortCountriesDeaths(this.state.dataCountries.result);\n        var sortedDataRecovered = this.sortCountriesRecovered(this.state.dataCountries.result);\n        var confirmedData = sortedDataConfirmed[0];\n        var deathsData = sortedDataDeaths[0];\n        var recoveredData = sortedDataRecovered[0];\n        confirmedRows = confirmedData.map(function (country) {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, \"\\xA0\\xA0\\xA0\", React.createElement(\"font\", {\n            style: {\n              color: \"red\",\n              fontSize: \"17px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, country.confirmed), React.createElement(\"font\", {\n            style: {\n              fontSize: \"15px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, \"\\xA0\\xA0\", country.name)));\n        });\n        deadRows = deathsData.map(function (country) {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, \"\\xA0\\xA0\\xA0\", React.createElement(\"font\", {\n            style: {\n              color: \"red\",\n              fontSize: \"17px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, country.deaths), React.createElement(\"font\", {\n            style: {\n              fontSize: \"15px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, \"\\xA0\\xA0\", country.name)));\n        });\n        recoveredRows = recoveredData.map(function (country) {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, \"\\xA0\\xA0\\xA0\", React.createElement(\"font\", {\n            style: {\n              color: \"red\",\n              fontSize: \"17px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }, country.recovered), React.createElement(\"font\", {\n            style: {\n              fontSize: \"15px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }, \"\\xA0\\xA0\", country.name)));\n        });\n        var menaConfirmed = 0,\n            menaDeaths = 0,\n            menaRecovered = 0;\n        confirmedRowsMENA = confirmedData.map(function (country) {\n          if (MENA.indexOf(country.name) !== -1) {\n            menaConfirmed += country.confirmed;\n            return React.createElement(\"tr\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 167\n              },\n              __self: this\n            }, React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 168\n              },\n              __self: this\n            }, \"\\xA0\\xA0\\xA0\", React.createElement(\"font\", {\n              style: {\n                color: \"red\",\n                fontSize: \"17px\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 170\n              },\n              __self: this\n            }, country.confirmed), React.createElement(\"font\", {\n              style: {\n                fontSize: \"15px\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 178\n              },\n              __self: this\n            }, \"\\xA0\\xA0\", country.name)));\n          }\n        });\n        deadRowsMENA = deathsData.map(function (country) {\n          if (MENA.indexOf(country.name) !== -1) {\n            menaDeaths += country.deaths;\n            return React.createElement(\"tr\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 191\n              },\n              __self: this\n            }, React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 192\n              },\n              __self: this\n            }, \"\\xA0\\xA0\\xA0\", React.createElement(\"font\", {\n              style: {\n                color: \"red\",\n                fontSize: \"17px\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 194\n              },\n              __self: this\n            }, country.deaths), React.createElement(\"font\", {\n              style: {\n                fontSize: \"15px\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 202\n              },\n              __self: this\n            }, \"\\xA0\\xA0\", country.name)));\n          }\n        });\n        recoveredRowsMENA = recoveredData.map(function (country) {\n          if (MENA.indexOf(country.name) !== -1) {\n            menaRecovered += country.recovered;\n            return React.createElement(\"tr\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 215\n              },\n              __self: this\n            }, React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 216\n              },\n              __self: this\n            }, \"\\xA0\\xA0\\xA0\", React.createElement(\"font\", {\n              style: {\n                color: \"red\",\n                fontSize: \"17px\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 218\n              },\n              __self: this\n            }, country.recovered), React.createElement(\"font\", {\n              style: {\n                fontSize: \"15px\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 226\n              },\n              __self: this\n            }, \"\\xA0\\xA0\", country.name)));\n          }\n        });\n      }\n\n      if (this.state.loading) {\n        return React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"counter-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \" \", React.createElement(\"div\", {\n        class: \"custom-control custom-switch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        class: \"custom-control-input\",\n        onClick: function onClick() {\n          return _this2.changeRegion();\n        },\n        id: \"regionswitch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        class: \"custom-control-label\",\n        for: \"regionswitch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, this.state.region ? \"Show Global Data\" : \"Show Arab World\")), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container counter-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: \"confirmed\",\n        id: \"counter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        eventKey: \"confirmed\",\n        title: \"Confirmed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card mx-auto counter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-3\",\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, this.state.loading ? \"\" : this.state.region ? menaConfirmed : this.state.data.confirmed.value)), React.createElement(\"div\", {\n        className: \"card mx-auto counter list my-custom-scrollbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        class: \"table-dark \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, this.state.loading ? \"\" : this.state.region ? confirmedRowsMENA : confirmedRows))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      })), React.createElement(Tab, {\n        eventKey: \"deaths\",\n        title: \"Deaths\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card mx-auto counter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-3\",\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, this.state.loading ? \"\" : this.state.region ? menaDeaths : this.state.data.deaths.value)), React.createElement(\"div\", {\n        className: \"card mx-auto counter list my-custom-scrollbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        class: \"table-dark \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \" \", this.state.loading ? \"\" : this.state.region ? deadRowsMENA : deadRows))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      })), React.createElement(Tab, {\n        eventKey: \"recovered\",\n        title: \"Recovered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card mx-auto counter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-3\",\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, this.state.loading ? \"\" : this.state.region ? menaRecovered : this.state.data.recovered.value)), React.createElement(\"div\", {\n        className: \"card mx-auto counter list my-custom-scrollbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        class: \"table-dark \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \" \", this.state.loading ? \"\" : this.state.region ? recoveredRowsMENA : recoveredRows))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setData: function setData(data) {\n      return dispatch(_setData(data));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Counter);","map":{"version":3,"sources":["/home/moe/Development/corona/online-retail-dashboard/src/components/Counter.js"],"names":["React","Component","countryData","axios","Tab","Tabs","Loading","connect","setData","MENA","allCountries","dictionary","instance1","create","baseURL","loading","instance2","Counter","state","data","dataCountries","region","changeRegion","setState","fetchData","get","response1","data1","response2","data2","console","error","componentDidMount","sortCountriesConfirmed","items","cleaned","map","country","countryName","Object","keys","name","confirmed","sort","a","b","sortCountriesRecovered","recovered","sortCountriesDeaths","deaths","props","confirmedRows","deadRows","recoveredRows","confirmedRowsMENA","deadRowsMENA","recoveredRowsMENA","sortedDataConfirmed","result","sortedDataDeaths","sortedDataRecovered","confirmedData","deathsData","recoveredData","color","fontSize","menaConfirmed","menaDeaths","menaRecovered","indexOf","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport countryData from \"./countries\";\nimport axios from \"axios\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Loading from \"./Loading\";\nimport { connect } from \"react-redux\";\nimport { setData } from \"../redux/actions\";\n\nconst MENA = countryData[1];\nconst allCountries = countryData[3];\nconst dictionary = countryData[4];\n\nconst instance1 = axios.create({\n  baseURL: \"https://covid19.mathdro.id/api/\",\n  loading: true,\n});\n\nconst instance2 = axios.create({\n  baseURL: \"https://covidapi.info/api/v1/global/latest\",\n  loading: true,\n});\n\nclass Counter extends Component {\n  state = {\n    data: null,\n    dataCountries: null,\n    loading: true,\n    region: true,\n  };\n\n  changeRegion = () => {\n    this.setState({ region: !this.state.region });\n  };\n\n  fetchData = async () => {\n    try {\n      let response1 = await instance1.get(``);\n      let data1 = response1.data;\n      let response2 = await instance2.get(``);\n      let data2 = response2.data;\n      this.setState({ data: data1, dataCountries: data2, loading: false });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  componentDidMount = async () => {\n    this.fetchData();\n  };\n\n  componentDidUpdate() {\n    this.props.setData(this.state.dataCountries);\n  }\n\n  sortCountriesConfirmed = (items) => {\n    let cleaned = items.map((country) => {\n      let countryName = Object.keys(country)[0];\n      return {\n        name: dictionary[countryName],\n        confirmed: country[countryName].confirmed,\n      };\n    });\n    const confirmed = cleaned.sort((a, b) => b.confirmed - a.confirmed);\n\n    return [confirmed];\n  };\n\n  sortCountriesRecovered = (items) => {\n    let cleaned = items.map((country) => {\n      let countryName = Object.keys(country)[0];\n      return {\n        name: dictionary[countryName],\n        recovered: country[countryName].recovered,\n      };\n    });\n\n    const recovered = cleaned.sort((a, b) => b.recovered - a.recovered);\n    return [recovered];\n  };\n\n  sortCountriesDeaths = (items) => {\n    let cleaned = items.map((country) => {\n      let countryName = Object.keys(country)[0];\n      return {\n        name: dictionary[countryName],\n        deaths: country[countryName].deaths,\n      };\n    });\n\n    const deaths = cleaned.sort((a, b) => b.deaths - a.deaths);\n    return [deaths];\n  };\n\n  render() {\n    let confirmedRows = <></>;\n    let deadRows = <></>;\n    let recoveredRows = <></>;\n    let confirmedRowsMENA = <></>;\n    let deadRowsMENA = <></>;\n    let recoveredRowsMENA = <></>;\n\n    if (!this.state.loading) {\n      const sortedDataConfirmed = this.sortCountriesConfirmed(\n        this.state.dataCountries.result\n      );\n      const sortedDataDeaths = this.sortCountriesDeaths(\n        this.state.dataCountries.result\n      );\n      const sortedDataRecovered = this.sortCountriesRecovered(\n        this.state.dataCountries.result\n      );\n      const confirmedData = sortedDataConfirmed[0];\n      const deathsData = sortedDataDeaths[0];\n      const recoveredData = sortedDataRecovered[0];\n\n      confirmedRows = confirmedData.map((country) => (\n        <tr>\n          <td>\n            &nbsp;&nbsp;&nbsp;\n            <font style={{ color: \"red\", fontSize: \"17px\" }}>\n              {country.confirmed}\n            </font>\n            <font style={{ fontSize: \"15px\" }}>\n              &nbsp;&nbsp;\n              {country.name}\n            </font>\n          </td>\n        </tr>\n      ));\n      deadRows = deathsData.map((country) => (\n        <tr>\n          <td>\n            &nbsp;&nbsp;&nbsp;\n            <font style={{ color: \"red\", fontSize: \"17px\" }}>\n              {country.deaths}\n            </font>\n            <font style={{ fontSize: \"15px\" }}>\n              &nbsp;&nbsp;\n              {country.name}\n            </font>\n          </td>\n        </tr>\n      ));\n      recoveredRows = recoveredData.map((country) => (\n        <tr>\n          <td>\n            &nbsp;&nbsp;&nbsp;\n            <font style={{ color: \"red\", fontSize: \"17px\" }}>\n              {country.recovered}\n            </font>\n            <font style={{ fontSize: \"15px\" }}>\n              &nbsp;&nbsp;\n              {country.name}\n            </font>\n          </td>\n        </tr>\n      ));\n      var menaConfirmed = 0,\n        menaDeaths = 0,\n        menaRecovered = 0;\n\n      confirmedRowsMENA = confirmedData.map((country) => {\n        if (MENA.indexOf(country.name) !== -1) {\n          menaConfirmed += country.confirmed;\n          return (\n            <tr>\n              <td>\n                &nbsp;&nbsp;&nbsp;\n                <font\n                  style={{\n                    color: \"red\",\n                    fontSize: \"17px\",\n                  }}\n                >\n                  {country.confirmed}\n                </font>\n                <font style={{ fontSize: \"15px\" }}>\n                  &nbsp;&nbsp;\n                  {country.name}\n                </font>\n              </td>\n            </tr>\n          );\n        }\n      });\n      deadRowsMENA = deathsData.map((country) => {\n        if (MENA.indexOf(country.name) !== -1) {\n          menaDeaths += country.deaths;\n          return (\n            <tr>\n              <td>\n                &nbsp;&nbsp;&nbsp;\n                <font\n                  style={{\n                    color: \"red\",\n                    fontSize: \"17px\",\n                  }}\n                >\n                  {country.deaths}\n                </font>\n                <font style={{ fontSize: \"15px\" }}>\n                  &nbsp;&nbsp;\n                  {country.name}\n                </font>\n              </td>\n            </tr>\n          );\n        }\n      });\n      recoveredRowsMENA = recoveredData.map((country) => {\n        if (MENA.indexOf(country.name) !== -1) {\n          menaRecovered += country.recovered;\n          return (\n            <tr>\n              <td>\n                &nbsp;&nbsp;&nbsp;\n                <font\n                  style={{\n                    color: \"red\",\n                    fontSize: \"17px\",\n                  }}\n                >\n                  {country.recovered}\n                </font>\n                <font style={{ fontSize: \"15px\" }}>\n                  &nbsp;&nbsp;\n                  {country.name}\n                </font>\n              </td>\n            </tr>\n          );\n        }\n      });\n    }\n    if (this.state.loading) {\n      return <Loading />;\n    }\n    return (\n      <div className=\"counter-div\">\n        {\" \"}\n        <div class=\"custom-control custom-switch\">\n          <input\n            type=\"checkbox\"\n            class=\"custom-control-input\"\n            onClick={() => this.changeRegion()}\n            id=\"regionswitch\"\n          />\n          <label class=\"custom-control-label\" for=\"regionswitch\">\n            {this.state.region ? \"Show Global Data\" : \"Show Arab World\"}\n          </label>\n        </div>{\" \"}\n        <br />\n        <div className=\"container counter-nav\">\n          <Tabs defaultActiveKey=\"confirmed\" id=\"counter\">\n            <Tab eventKey=\"confirmed\" title=\"Confirmed\">\n              <div className=\"card mx-auto counter\">\n                <h1 className=\"display-3\" style={{ color: \"red\" }}>\n                  {this.state.loading\n                    ? \"\"\n                    : this.state.region\n                    ? menaConfirmed\n                    : this.state.data.confirmed.value}\n                </h1>\n              </div>\n              <div className=\"card mx-auto counter list my-custom-scrollbar\">\n                <table class=\"table-dark \">\n                  <tbody>\n                    {this.state.loading\n                      ? \"\"\n                      : this.state.region\n                      ? confirmedRowsMENA\n                      : confirmedRows}\n                  </tbody>\n                </table>\n              </div>\n              <br />\n            </Tab>\n            <Tab eventKey=\"deaths\" title=\"Deaths\">\n              <div className=\"card mx-auto counter\">\n                <h1 className=\"display-3\" style={{ color: \"red\" }}>\n                  {this.state.loading\n                    ? \"\"\n                    : this.state.region\n                    ? menaDeaths\n                    : this.state.data.deaths.value}\n                </h1>\n              </div>\n              <div className=\"card mx-auto counter list my-custom-scrollbar\">\n                <table class=\"table-dark \">\n                  <tbody>\n                    {\" \"}\n                    {this.state.loading\n                      ? \"\"\n                      : this.state.region\n                      ? deadRowsMENA\n                      : deadRows}\n                  </tbody>\n                </table>\n              </div>\n              <br />\n            </Tab>\n            <Tab eventKey=\"recovered\" title=\"Recovered\">\n              <div className=\"card mx-auto counter\">\n                <h1 className=\"display-3\" style={{ color: \"red\" }}>\n                  {this.state.loading\n                    ? \"\"\n                    : this.state.region\n                    ? menaRecovered\n                    : this.state.data.recovered.value}\n                </h1>\n              </div>\n              <div className=\"card mx-auto counter list my-custom-scrollbar\">\n                <table class=\"table-dark \">\n                  <tbody>\n                    {\" \"}\n                    {this.state.loading\n                      ? \"\"\n                      : this.state.region\n                      ? recoveredRowsMENA\n                      : recoveredRows}\n                  </tbody>\n                </table>\n              </div>\n              <br />\n            </Tab>\n          </Tabs>\n          <br /> <br /> <br /> <br />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setData: (data) => dispatch(setData(data)),\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Counter);\n"]},"metadata":{},"sourceType":"module"}