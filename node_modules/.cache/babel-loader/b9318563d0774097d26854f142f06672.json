{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/moe/Development/corona/covid19-dashboard/src/components/MapChart.js\";\n\nimport React, { useState } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport countryData from \"./countries\";\nvar reverseDict = countryData[5];\n\nvar MapChart = function MapChart(props) {\n  var confirmedList = [],\n      countryNames = [];\n\n  _this.props.data.map(function (country) {\n    confirmedList.push(country.confirmed);\n    countryNames.push(reverseDict[country.name]);\n  });\n\n  var scaledData = confirmedList.map(function (num) {\n    return Math.pow(num, 0.3);\n  });\n  var data = [{\n    type: \"scattergeo\",\n    mode: \"markers\",\n    locations: countryNames,\n    hoverinfo: \"text, label\",\n    text: confirmedList,\n    marker: {\n      size: scaledData,\n      color: \"rgba(255,0,0,0.75)\",\n      sizeref: 1,\n      line: {\n        color: \"black\"\n      }\n    },\n    name: \"europe data\"\n  }];\n  return React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Plot, {\n    data: data,\n    layout: {\n      modebar: {\n        bgcolor: \"rgba(255,255,255,0)\"\n      },\n      geo: {\n        scope: \"World\",\n        resolution: \"200\",\n        showland: true,\n        landcolor: \"#161616\",\n        showframe: false,\n        bgcolor: \"#161616\",\n        showcountries: true,\n        showocean: true,\n        oceancolor: \"#030217\"\n      },\n      plot_bgcolor: \"rgba(0,0,0,0)\",\n      paper_bgcolor: \"rgba(0,0,0,0)\",\n      autosize: true\n    },\n    useResizeHandler: true,\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    onClick: function onClick(data) {\n      return handleShow(data);\n    },\n    config: {\n      modeBarButtonsToRemove: [\"toggleSpikelines\", \"autoScale2d\", \"hoverClosestCartesian\", \"hoverCompareCartesian\", \"select2d\", \"lasso2d\", \"hoverClosestGeo\", \"zoomInGeo\", \"zoomOutGeo\"],\n      displaylogo: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n};\n\nexport default MapChart;","map":{"version":3,"sources":["/home/moe/Development/corona/covid19-dashboard/src/components/MapChart.js"],"names":["React","useState","Plot","countryData","reverseDict","MapChart","props","confirmedList","countryNames","data","map","country","push","confirmed","name","scaledData","num","Math","pow","type","mode","locations","hoverinfo","text","marker","size","color","sizeref","line","width","height","modebar","bgcolor","geo","scope","resolution","showland","landcolor","showframe","showcountries","showocean","oceancolor","plot_bgcolor","paper_bgcolor","autosize","handleShow","modeBarButtonsToRemove","displaylogo"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport countryData from \"./countries\";\n\nconst reverseDict = countryData[5];\n\nconst MapChart = (props) => {\n  let confirmedList = [],\n    countryNames = [];\n  this.props.data.map((country) => {\n    confirmedList.push(country.confirmed);\n    countryNames.push(reverseDict[country.name]);\n  });\n\n  let scaledData = confirmedList.map((num) => Math.pow(num, 0.3));\n  let data = [\n    {\n      type: \"scattergeo\",\n      mode: \"markers\",\n      locations: countryNames,\n      hoverinfo: \"text, label\",\n      text: confirmedList,\n      marker: {\n        size: scaledData,\n        color: \"rgba(255,0,0,0.75)\",\n        sizeref: 1,\n        line: {\n          color: \"black\",\n        },\n      },\n      name: \"europe data\",\n    },\n  ];\n\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <Plot\n        data={data}\n        layout={{\n          modebar: {\n            bgcolor: \"rgba(255,255,255,0)\",\n          },\n          geo: {\n            scope: \"World\",\n            resolution: \"200\",\n            showland: true,\n            landcolor: \"#161616\",\n            showframe: false,\n            bgcolor: \"#161616\",\n            showcountries: true,\n            showocean: true,\n\n            oceancolor: \"#030217\",\n          },\n\n          plot_bgcolor: \"rgba(0,0,0,0)\",\n          paper_bgcolor: \"rgba(0,0,0,0)\",\n          autosize: true,\n        }}\n        useResizeHandler={true}\n        style={{ width: \"100%\", height: \"100%\" }}\n        onClick={(data) => handleShow(data)}\n        config={{\n          modeBarButtonsToRemove: [\n            \"toggleSpikelines\",\n            \"autoScale2d\",\n            \"hoverClosestCartesian\",\n            \"hoverCompareCartesian\",\n            \"select2d\",\n            \"lasso2d\",\n            \"hoverClosestGeo\",\n            \"zoomInGeo\",\n            \"zoomOutGeo\",\n          ],\n          displaylogo: false,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default MapChart;\n"]},"metadata":{},"sourceType":"module"}