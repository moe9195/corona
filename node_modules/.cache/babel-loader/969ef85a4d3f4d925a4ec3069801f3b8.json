{"ast":null,"code":"import _classCallCheck from \"/home/moe/Development/corona/covid19-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/moe/Development/corona/covid19-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/moe/Development/corona/covid19-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/moe/Development/corona/covid19-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/moe/Development/corona/covid19-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/moe/Development/corona/covid19-dashboard/src/components/Counter.js\";\nimport React, { Component } from \"react\";\nimport countryData from \"./countries\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Loading from \"./Loading\";\nimport { connect } from \"react-redux\";\nimport { setData as _setData } from \"../redux/actions\";\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: null,\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.loading !== this.props.loading) {\n        this.setState({\n          loading: !this.props.loading\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var confirmedRows = React.createElement(React.Fragment, null);\n      var deadRows = React.createElement(React.Fragment, null);\n      var recoveredRows = React.createElement(React.Fragment, null);\n      var confirmedData = this.props.data[0];\n      var deathsData = this.props.data[1];\n      var recoveredData = this.props.data[2];\n      confirmedRows = confirmedData.map(function (country) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"\\xA0\\xA0\\xA0\", React.createElement(\"font\", {\n          style: {\n            color: \"red\",\n            fontSize: \"18px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, country.confirmed), React.createElement(\"font\", {\n          style: {\n            fontSize: \"16px\",\n            color: \"#99aab5\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"\\xA0\\xA0\", country.name)));\n      });\n      deadRows = deathsData.map(function (country) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"\\xA0\\xA0\\xA0\", React.createElement(\"font\", {\n          style: {\n            color: \"red\",\n            fontSize: \"18px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, country.deaths), React.createElement(\"font\", {\n          style: {\n            fontSize: \"16px\",\n            color: \"#99aab5\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"\\xA0\\xA0\", country.name)));\n      });\n      recoveredRows = recoveredData.map(function (country) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"\\xA0\\xA0\\xA0\", React.createElement(\"font\", {\n          style: {\n            color: \"red\",\n            fontSize: \"18px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, country.recovered), React.createElement(\"font\", {\n          style: {\n            fontSize: \"16px\",\n            color: \"#99aab5\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"\\xA0\\xA0\", country.name)));\n      });\n      recoveredData.map(function (country) {\n        return console.log(country);\n      });\n\n      if (this.props.loading) {\n        return React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"counter-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: \"confirmed\",\n        id: \"counter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        eventKey: \"confirmed\",\n        title: \"Confirmed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card mx-auto counter list my-custom-scrollbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        class: \"table-dark table-bordered \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.props.loading ? \"\" : confirmedRows)))), React.createElement(Tab, {\n        eventKey: \"deaths\",\n        title: \"Deaths\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card mx-auto counter list my-custom-scrollbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        class: \"table-dark table-bordered \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \" \", this.props.loading ? \"\" : deadRows)))), React.createElement(Tab, {\n        eventKey: \"recovered\",\n        title: \"Recovered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card mx-auto counter list my-custom-scrollbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        class: \"table-dark table-bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \" \", this.props.loading ? \"\" : recoveredRows))))));\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setData: function setData(data) {\n      return dispatch(_setData(data));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Counter);","map":{"version":3,"sources":["/home/moe/Development/corona/covid19-dashboard/src/components/Counter.js"],"names":["React","Component","countryData","Tab","Tabs","Loading","connect","setData","Counter","state","data","loading","prevProps","props","setState","confirmedRows","deadRows","recoveredRows","confirmedData","deathsData","recoveredData","map","country","color","fontSize","confirmed","name","deaths","recovered","console","log","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport countryData from \"./countries\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Loading from \"./Loading\";\nimport { connect } from \"react-redux\";\nimport { setData } from \"../redux/actions\";\n\nclass Counter extends Component {\n  state = {\n    data: null,\n    loading: true,\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.loading !== this.props.loading) {\n      this.setState({ loading: !this.props.loading });\n    }\n  }\n\n  render() {\n    let confirmedRows = <></>;\n    let deadRows = <></>;\n    let recoveredRows = <></>;\n\n    const confirmedData = this.props.data[0];\n    const deathsData = this.props.data[1];\n    const recoveredData = this.props.data[2];\n\n    confirmedRows = confirmedData.map((country) => (\n      <tr>\n        <td>\n          &nbsp;&nbsp;&nbsp;\n          <font style={{ color: \"red\", fontSize: \"18px\" }}>\n            {country.confirmed}\n          </font>\n          <font style={{ fontSize: \"16px\", color: \"#99aab5\" }}>\n            &nbsp;&nbsp;\n            {country.name}\n          </font>\n        </td>\n      </tr>\n    ));\n    deadRows = deathsData.map((country) => (\n      <tr>\n        <td>\n          &nbsp;&nbsp;&nbsp;\n          <font style={{ color: \"red\", fontSize: \"18px\" }}>\n            {country.deaths}\n          </font>\n          <font style={{ fontSize: \"16px\", color: \"#99aab5\" }}>\n            &nbsp;&nbsp;\n            {country.name}\n          </font>\n        </td>\n      </tr>\n    ));\n    recoveredRows = recoveredData.map((country) => (\n      <tr>\n        <td>\n          &nbsp;&nbsp;&nbsp;\n          <font style={{ color: \"red\", fontSize: \"18px\" }}>\n            {country.recovered}\n          </font>\n          <font style={{ fontSize: \"16px\", color: \"#99aab5\" }}>\n            &nbsp;&nbsp;\n            {country.name}\n          </font>\n        </td>\n      </tr>\n    ));\n\n    recoveredData.map((country) => console.log(country));\n\n    if (this.props.loading) {\n      return <Loading />;\n    }\n    return (\n      <div className=\"counter-nav\">\n        <Tabs defaultActiveKey=\"confirmed\" id=\"counter\">\n          <Tab eventKey=\"confirmed\" title=\"Confirmed\">\n            <div className=\"card mx-auto counter list my-custom-scrollbar\">\n              <table class=\"table-dark table-bordered \">\n                <tbody>{this.props.loading ? \"\" : confirmedRows}</tbody>\n              </table>\n            </div>\n          </Tab>\n          <Tab eventKey=\"deaths\" title=\"Deaths\">\n            <div className=\"card mx-auto counter list my-custom-scrollbar\">\n              <table class=\"table-dark table-bordered \">\n                <tbody> {this.props.loading ? \"\" : deadRows}</tbody>\n              </table>\n            </div>\n          </Tab>\n          <Tab eventKey=\"recovered\" title=\"Recovered\">\n            <div className=\"card mx-auto counter list my-custom-scrollbar\">\n              <table class=\"table-dark table-bordered\">\n                <tbody> {this.props.loading ? \"\" : recoveredRows}</tbody>\n              </table>\n            </div>\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setData: (data) => dispatch(setData(data)),\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Counter);\n"]},"metadata":{},"sourceType":"module"}