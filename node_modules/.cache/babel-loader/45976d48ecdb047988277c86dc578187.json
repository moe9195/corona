{"ast":null,"code":"import _classCallCheck from \"/home/moe/Development/corona/covid19-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/moe/Development/corona/covid19-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/moe/Development/corona/covid19-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/moe/Development/corona/covid19-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/moe/Development/corona/covid19-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/moe/Development/corona/covid19-dashboard/src/components/PieChart.js\";\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport colormap from \"colormap\";\nimport countryData from \"./countries\";\nimport Loading from \"./Loading\";\nvar countries = countryData[1];\n\nvar PieChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PieChart, _Component);\n\n  function PieChart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PieChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PieChart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: null,\n      selector: \"confirmed\"\n    };\n\n    _this.handleOnClick = function (selected) {\n      _this.setState({\n        selector: selected\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PieChart, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.loading !== this.props.loading) {\n        this.setState({\n          loading: !this.props.loading\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var selectors = [\"confirmed\", \"deaths\", \"recovered\"];\n      var buttons = selectors.map(function (selector) {\n        return React.createElement(\"button\", {\n          className: _this2.state.selector === selector ? \"btn btn-outline-dark-pie clicked\" : \"btn btn-outline-dark-pie\",\n          onClick: function onClick() {\n            return _this2.handleOnClick(selector);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, selector);\n      });\n      var confirmedData = this.props.data[0];\n      var deathsData = this.props.data[1];\n      var recoveredData = this.props.data[2];\n      var confirmedX = [],\n          confirmedY = [];\n      confirmedData.map(function (country) {\n        confirmedX.push(country.name);\n        confirmedY.push(country.confirmed);\n      });\n      var deathsX = [],\n          deathsY = [];\n      deathsData.map(function (country) {\n        deathsX.push(country.name);\n        deathsY.push(country.deaths);\n      });\n      var recoveredX = [],\n          recoveredY = [];\n      recoveredData.map(function (country) {\n        recoveredX.push(country.name);\n        recoveredY.push(country.recovered);\n      });\n\n      if (this.state.selector === \"confirmed\") {\n        var data = [{\n          values: confirmedY,\n          labels: confirmedX,\n          type: \"pie\",\n          textinfo: \"label\",\n          title: {\n            text: \"Total Confirmed <br> \",\n            position: \"  center\"\n          }\n        }];\n      } else if (this.state.selector === \"deaths\") {\n        var data = [{\n          values: deathsX,\n          labels: deathsY,\n          type: \"pie\",\n          textinfo: \"label\",\n          title: {\n            text: \"Total Deaths <br> \",\n            position: \"  center\"\n          }\n        }];\n      } else {\n        var data = [{\n          values: recoveredX,\n          labels: recoveredY,\n          type: \"pie\",\n          textinfo: \"label\",\n          title: {\n            text: \"Total Recovered <br> \",\n            position: \"  center\"\n          }\n        }];\n      }\n\n      var colorway = colormap({\n        colormap: \"jet\",\n        nshades: countries.length,\n        format: \"hex\",\n        alpha: 1\n      });\n      return React.createElement(\"div\", {\n        className: \" padded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, buttons, React.createElement(Plot, {\n        data: [{\n          values: [19, 26, 55],\n          labels: [\"Residential\", \"Non-Residential\", \"Utility\"],\n          type: \"pie\"\n        }],\n        layout: {\n          modebar: {\n            bgcolor: \"rgba(255,255,255,0)\"\n          },\n          font: {\n            color: \"#99aab5\",\n            size: 14\n          },\n          showlegend: false,\n          colorway: colorway.reverse(),\n          plot_bgcolor: \"#161616\",\n          paper_bgcolor: \"#161616\",\n          autosize: true\n        },\n        config: {\n          modeBarButtonsToRemove: [\"toggleSpikelines\", \"zoomIn2d\", \"zoomOut2d\", \"autoScale2d\", \"hoverClosestCartesian\", \"hoverCompareCartesian\", \"hoverClosestPie\"],\n          displaylogo: false\n        },\n        useResizeHandler: true,\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), \" \");\n    }\n  }]);\n\n  return PieChart;\n}(Component);\n\nexport default PieChart;","map":{"version":3,"sources":["/home/moe/Development/corona/covid19-dashboard/src/components/PieChart.js"],"names":["React","Component","Plot","colormap","countryData","Loading","countries","PieChart","state","data","selector","handleOnClick","selected","setState","prevProps","loading","props","selectors","buttons","map","confirmedData","deathsData","recoveredData","confirmedX","confirmedY","country","push","name","confirmed","deathsX","deathsY","deaths","recoveredX","recoveredY","recovered","values","labels","type","textinfo","title","text","position","colorway","nshades","length","format","alpha","modebar","bgcolor","font","color","size","showlegend","reverse","plot_bgcolor","paper_bgcolor","autosize","modeBarButtonsToRemove","displaylogo","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport colormap from \"colormap\";\nimport countryData from \"./countries\";\nimport Loading from \"./Loading\";\n\nconst countries = countryData[1];\n\nclass PieChart extends Component {\n  state = {\n    data: null,\n    selector: \"confirmed\",\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.loading !== this.props.loading) {\n      this.setState({ loading: !this.props.loading });\n    }\n  }\n\n  handleOnClick = (selected) => {\n    this.setState({ selector: selected });\n  };\n\n  render() {\n    const selectors = [\"confirmed\", \"deaths\", \"recovered\"];\n\n    const buttons = selectors.map((selector) => (\n      <button\n        className={\n          this.state.selector === selector\n            ? \"btn btn-outline-dark-pie clicked\"\n            : \"btn btn-outline-dark-pie\"\n        }\n        onClick={() => this.handleOnClick(selector)}\n      >\n        {selector}\n      </button>\n    ));\n\n    const confirmedData = this.props.data[0];\n    const deathsData = this.props.data[1];\n    const recoveredData = this.props.data[2];\n\n    var confirmedX = [],\n      confirmedY = [];\n    confirmedData.map((country) => {\n      confirmedX.push(country.name);\n      confirmedY.push(country.confirmed);\n    });\n\n    var deathsX = [],\n      deathsY = [];\n    deathsData.map((country) => {\n      deathsX.push(country.name);\n      deathsY.push(country.deaths);\n    });\n\n    var recoveredX = [],\n      recoveredY = [];\n    recoveredData.map((country) => {\n      recoveredX.push(country.name);\n      recoveredY.push(country.recovered);\n    });\n\n    if (this.state.selector === \"confirmed\") {\n      var data = [\n        {\n          values: confirmedY,\n          labels: confirmedX,\n          type: \"pie\",\n          textinfo: \"label\",\n          title: {\n            text: \"Total Confirmed <br> \",\n            position: \"  center\",\n          },\n        },\n      ];\n    } else if (this.state.selector === \"deaths\") {\n      var data = [\n        {\n          values: deathsX,\n          labels: deathsY,\n          type: \"pie\",\n          textinfo: \"label\",\n          title: { text: \"Total Deaths <br> \", position: \"  center\" },\n        },\n      ];\n    } else {\n      var data = [\n        {\n          values: recoveredX,\n          labels: recoveredY,\n          type: \"pie\",\n          textinfo: \"label\",\n          title: { text: \"Total Recovered <br> \", position: \"  center\" },\n        },\n      ];\n    }\n\n    const colorway = colormap({\n      colormap: \"jet\",\n      nshades: countries.length,\n      format: \"hex\",\n      alpha: 1,\n    });\n\n    return (\n      <div className=\" padded\">\n        {buttons}\n        <Plot\n          data={[\n            {\n              values: [19, 26, 55],\n              labels: [\"Residential\", \"Non-Residential\", \"Utility\"],\n              type: \"pie\",\n            },\n          ]}\n          layout={{\n            modebar: { bgcolor: \"rgba(255,255,255,0)\" },\n            font: { color: \"#99aab5\", size: 14 },\n            showlegend: false,\n            colorway: colorway.reverse(),\n            plot_bgcolor: \"#161616\",\n            paper_bgcolor: \"#161616\",\n            autosize: true,\n          }}\n          config={{\n            modeBarButtonsToRemove: [\n              \"toggleSpikelines\",\n              \"zoomIn2d\",\n              \"zoomOut2d\",\n              \"autoScale2d\",\n              \"hoverClosestCartesian\",\n              \"hoverCompareCartesian\",\n              \"hoverClosestPie\",\n            ],\n            displaylogo: false,\n          }}\n          useResizeHandler={true}\n          style={{ width: \"100%\", height: \"100%\" }}\n        />{\" \"}\n      </div>\n    );\n  }\n}\n\nexport default PieChart;\n"]},"metadata":{},"sourceType":"module"}