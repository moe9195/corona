{"version":3,"sources":["components/countries.js","components/styled-components.js","components/arabicCountries.js","components/Loading.js","components/Counter.js","redux/actions/data.js","redux/actions/actionTypes.js","components/TotalCounter.js","components/translation.js","components/TimeGraph.js","components/PieChart.js","components/MapChart.js","components/CountryInfo.js","components/Footer.js","components/LastUpdated.js","components/App.js","serviceWorker.js","redux/reducers/data.js","redux/reducers/index.js","redux/index.js","index.js"],"names":["Container","styled","div","_templateObject","countries","nav","_templateObject2","countriesFull","isoDictionary","i","length","allCountries","name","iso2","iso3","isoDictionaryAll","temp","countryData","json","ret","key","swap","id","alpha2","alpha3","dictionary","toUpperCase","arabicCountries","Loading","react_default","a","createElement","className","index_es","icon","faSpinner","spin","size","Counter","state","data","loading","prevProps","this","props","setState","confirmedRows","Fragment","deadRows","recoveredRows","confirmedData","deathsData","recoveredData","map","country","style","color","fontSize","confirmed","deaths","recovered","console","log","components_Loading","Tabs","defaultActiveKey","Tab","eventKey","title","language","class","Component","connect","dispatch","setData","type","payload","TotalCounter","_ref","translate","daily increase","logarithmic","arabicdictionaries","TimeGraph","selector","capitalizeFirstLetter","string","charAt","slice","setupTicks","arr","delta","date","l","Math","floor","newArr","push","_this","formatDate","handleOnClick","selected","handleSwitch","_this2","buttons","padding","onClick","plotDataY","plotDataX","iso","countryObj","confirmedArr","deathsArr","recoveredArr","timeArr","counter","dateArr","scatterData","select","trace","x","y","logType","colorway","colormap","nshades","format","alpha","faQuestionCircle","for","react_plotly_default","layout","modebar","bgcolor","font","xaxis","nticks","yaxis","plot_bgcolor","paper_bgcolor","autosize","height","hovermode","margin","r","t","b","pad","legend","xanchor","yanchor","orientation","config","modeBarButtonsToRemove","displaylogo","useResizeHandler","width","PieChart","confirmedX","confirmedY","deathsX","deathsY","recoveredX","recoveredY","values","labels","textinfo","rotation","showlegend","reverse","reverseDict","reverseArabic","setCountry","region","confirmedList","countryNames","scaledData","num","pow","plotdata","mode","locations","hoverinfo","text","marker","sizeref","line","geo","scope","resolution","showland","landcolor","showframe","showcountries","showocean","oceancolor","border","lonaxis","range","lataxis","pointData","index","points","pointIndex","location","handleClick","arabicdictionary","instance","axios","create","baseURL","global","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","setLoading","_useState5","_useState6","X","setX","_useState7","_useState8","Y1","setY1","_useState9","_useState10","Y2","setY2","_useState11","_useState12","Y3","setY3","_useState13","_useState14","Y4","setY4","_useState15","_useState16","setLogarithmic","_useState17","_useState18","setSelector","fetchData","_ref2","asyncToGenerator","regenerator_default","mark","_callee","response","_countryData","wrap","_context","prev","next","get","concat","sent","result","t0","error","stop","_x","apply","arguments","useEffect","Xtemp","Y1temp","Y2temp","Y3temp","Y4temp","plotData","Footer","textAlign","paddingTop","href","direction","LastUpdated","setDate","fetchDate","fetchedData","opacity","paddingLeft","MENA","App","dataCountries","response1","data1","dict","response2","data2","timeData","componentDidMount","_callee2","_context2","sortCountries","items","cleanedConfirmed","cleanedRecovered","cleanedDeaths","countryName","keys","indexOf","confirmedObj","recoveredObj","deathsObj","sort","sortedData","sortedDataMENA","confirmedDataMENA","deathsDataMENA","recoveredDataMENA","totalConfirmedMENA","totalDeathsMENA","totalRecoveredMENA","totalConfirmed","totalDeaths","totalRecovered","flexDirection","changeLanguage","components_TotalCounter","components_Counter","components_TimeGraph","components_PieChart","components_MapChart","components_CountryInfo","components_LastUpdated","components_Footer","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","initialState","reducer","undefined","action","objectSpread","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6615b828.chunk.js","sourcesContent":["const countries = [\n  \"DZA\",\n  \"KWT\",\n  \"BHR\",\n  \"EGY\",\n  \"IRQ\",\n  \"JOR\",\n  \"LBN\",\n  \"LBY\",\n  \"MAR\",\n  \"OMN\",\n  \"QAT\",\n  \"SAU\",\n  \"SYR\",\n  \"TUN\",\n  \"ARE\",\n  \"SDN\",\n];\n\nconst countriesFull = [\n  \"Algeria\",\n  \"Kuwait\",\n  \"Bahrain\",\n  \"Egypt\",\n  \"Iraq\",\n  \"Jordan\",\n  \"Lebanon\",\n  \"Libya\",\n  \"Morocco\",\n  \"Oman\",\n  \"Qatar\",\n  \"Saudi Arabia\",\n  \"Syria\",\n  \"Tunisia\",\n  \"UAE\",\n  \"Sudan\",\n];\n\nconst isoDictionary = {};\nfor (let i = 0; i < countries.length; i++) {\n  isoDictionary[countries[i]] = countriesFull[i];\n}\n\nconst allCountries = [\n  { name: \"Afghanistan\", iso2: \"AF\", iso3: \"AFG\" },\n  { name: \"Albania\", iso2: \"AL\", iso3: \"ALB\" },\n  { name: \"Algeria\", iso2: \"DZ\", iso3: \"DZA\" },\n  { name: \"Andorra\", iso2: \"AD\", iso3: \"AND\" },\n  { name: \"Angola\", iso2: \"AO\", iso3: \"AGO\" },\n  { name: \"Antigua and Barbuda\", iso2: \"AG\", iso3: \"ATG\" },\n  { name: \"Argentina\", iso2: \"AR\", iso3: \"ARG\" },\n  { name: \"Armenia\", iso2: \"AM\", iso3: \"ARM\" },\n  { name: \"Australia\", iso2: \"AU\", iso3: \"AUS\" },\n  { name: \"Austria\", iso2: \"AT\", iso3: \"AUT\" },\n  { name: \"Azerbaijan\", iso2: \"AZ\", iso3: \"AZE\" },\n  { name: \"Bahamas\", iso2: \"BS\", iso3: \"BHS\" },\n  { name: \"Bahrain\", iso2: \"BH\", iso3: \"BHR\" },\n  { name: \"Bangladesh\", iso2: \"BD\", iso3: \"BGD\" },\n  { name: \"Barbados\", iso2: \"BB\", iso3: \"BRB\" },\n  { name: \"Belarus\", iso2: \"BY\", iso3: \"BLR\" },\n  { name: \"Belgium\", iso2: \"BE\", iso3: \"BEL\" },\n  { name: \"Belize\", iso2: \"BZ\", iso3: \"BLZ\" },\n  { name: \"Benin\", iso2: \"BJ\", iso3: \"BEN\" },\n  { name: \"Bhutan\", iso2: \"BT\", iso3: \"BTN\" },\n  { name: \"Bolivia\", iso2: \"BO\", iso3: \"BOL\" },\n  { name: \"Bosnia and Herzegovina\", iso2: \"BA\", iso3: \"BIH\" },\n  { name: \"Botswana\", iso2: \"BW\", iso3: \"BWA\" },\n  { name: \"Brazil\", iso2: \"BR\", iso3: \"BRA\" },\n  { name: \"Brunei\", iso2: \"BN\", iso3: \"BRN\" },\n  { name: \"Bulgaria\", iso2: \"BG\", iso3: \"BGR\" },\n  { name: \"Burkina Faso\", iso2: \"BF\", iso3: \"BFA\" },\n  { name: \"Burma\" },\n  { name: \"Burundi\", iso2: \"BI\", iso3: \"BDI\" },\n  { name: \"Cabo Verde\" },\n  { name: \"Kosovo\", iso2: \"RK\", iso3: \"RKS\" },\n  { name: \"Cambodia\", iso2: \"KH\", iso3: \"KHM\" },\n  { name: \"Cameroon\", iso2: \"CM\", iso3: \"CMR\" },\n  { name: \"Canada\", iso2: \"CA\", iso3: \"CAN\" },\n  { name: \"Central African Republic\", iso2: \"CF\", iso3: \"CAF\" },\n  { name: \"Chad\", iso2: \"TD\", iso3: \"TCD\" },\n  { name: \"Chile\", iso2: \"CL\", iso3: \"CHL\" },\n  { name: \"China\", iso2: \"CN\", iso3: \"CHN\" },\n  { name: \"Colombia\", iso2: \"CO\", iso3: \"COL\" },\n  { name: \"Congo (Brazzaville)\" },\n  { name: \"Congo (Kinshasa)\" },\n  { name: \"D. R. Congo\", iso2: \"CD\", iso3: \"COD\" },\n  { name: \"Costa Rica\", iso2: \"CR\", iso3: \"CRI\" },\n  { name: \"Cote d'Ivoire\" },\n  { name: \"Croatia\", iso2: \"HR\", iso3: \"HRV\" },\n  { name: \"Cuba\", iso2: \"CU\", iso3: \"CUB\" },\n  { name: \"Cyprus\", iso2: \"CY\", iso3: \"CYP\" },\n  { name: \"Czechia\", iso2: \"CZ\", iso3: \"CZE\" },\n  { name: \"Denmark\", iso2: \"DK\", iso3: \"DNK\" },\n  { name: \"Diamond Princess\" },\n  { name: \"Djibouti\", iso2: \"DJ\", iso3: \"DJI\" },\n  { name: \"Dominica\", iso2: \"DM\", iso3: \"DMA\" },\n  { name: \"Dominican Republic\", iso2: \"DO\", iso3: \"DOM\" },\n  { name: \"Ecuador\", iso2: \"EC\", iso3: \"ECU\" },\n  { name: \"Egypt\", iso2: \"EG\", iso3: \"EGY\" },\n  { name: \"El Salvador\", iso2: \"SV\", iso3: \"SLV\" },\n  { name: \"Equatorial Guinea\", iso2: \"GQ\", iso3: \"GNQ\" },\n  { name: \"Eritrea\", iso2: \"ER\", iso3: \"ERI\" },\n  { name: \"Estonia\", iso2: \"EE\", iso3: \"EST\" },\n  { name: \"Eswatini\" },\n  { name: \"Ethiopia\", iso2: \"ET\", iso3: \"ETH\" },\n  { name: \"Fiji\", iso2: \"FJ\", iso3: \"FJI\" },\n  { name: \"Finland\", iso2: \"FI\", iso3: \"FIN\" },\n  { name: \"France\", iso2: \"FR\", iso3: \"FRA\" },\n  { name: \"Gabon\", iso2: \"GA\", iso3: \"GAB\" },\n  { name: \"Gambia\", iso2: \"GM\", iso3: \"GMB\" },\n  { name: \"Georgia\", iso2: \"GE\", iso3: \"GEO\" },\n  { name: \"Germany\", iso2: \"DE\", iso3: \"DEU\" },\n  { name: \"Ghana\", iso2: \"GH\", iso3: \"GHA\" },\n  { name: \"Greece\", iso2: \"GR\", iso3: \"GRC\" },\n  { name: \"Grenada\", iso2: \"GD\", iso3: \"GRD\" },\n  { name: \"Guatemala\", iso2: \"GT\", iso3: \"GTM\" },\n  { name: \"Guinea\", iso2: \"GN\", iso3: \"GIN\" },\n  { name: \"Guinea-Bissau\", iso2: \"GW\", iso3: \"GNB\" },\n  { name: \"Guyana\", iso2: \"GY\", iso3: \"GUY\" },\n  { name: \"Haiti\", iso2: \"HT\", iso3: \"HTI\" },\n  { name: \"Holy See\" },\n  { name: \"Myanmar (Burma)\", iso2: \"MM\", iso3: \"MMR\" },\n  { name: \"Honduras\", iso2: \"HN\", iso3: \"HND\" },\n  { name: \"Hungary\", iso2: \"HU\", iso3: \"HUN\" },\n  { name: \"Iceland\", iso2: \"IS\", iso3: \"ISL\" },\n  { name: \"India\", iso2: \"IN\", iso3: \"IND\" },\n  { name: \"Indonesia\", iso2: \"ID\", iso3: \"IDN\" },\n  { name: \"Iran\", iso2: \"IR\", iso3: \"IRN\" },\n  { name: \"Iraq\", iso2: \"IQ\", iso3: \"IRQ\" },\n  { name: \"Ireland\", iso2: \"IE\", iso3: \"IRL\" },\n  { name: \"Israel\", iso2: \"IL\", iso3: \"ISR\" },\n  { name: \"Italy\", iso2: \"IT\", iso3: \"ITA\" },\n  { name: \"Jamaica\", iso2: \"JM\", iso3: \"JAM\" },\n  { name: \"Japan\", iso2: \"JP\", iso3: \"JPN\" },\n  { name: \"Jordan\", iso2: \"JO\", iso3: \"JOR\" },\n  { name: \"Kazakhstan\", iso2: \"KZ\", iso3: \"KAZ\" },\n  { name: \"Kenya\", iso2: \"KE\", iso3: \"KEN\" },\n  { name: \"Korea, South\", iso2: \"KR\", iso3: \"KOR\" },\n  { name: \"Kosovo\", iso2: \"XK\", iso3: \"XKX\" },\n  { name: \"Kuwait\", iso2: \"KW\", iso3: \"KWT\" },\n  { name: \"Kyrgyzstan\", iso2: \"KG\", iso3: \"KGZ\" },\n  { name: \"Laos\", iso2: \"LA\", iso3: \"LAO\" },\n  { name: \"Latvia\", iso2: \"LV\", iso3: \"LVA\" },\n  { name: \"Lebanon\", iso2: \"LB\", iso3: \"LBN\" },\n  { name: \"Liberia\", iso2: \"LR\", iso3: \"LBR\" },\n  { name: \"Libya\", iso2: \"LY\", iso3: \"LBY\" },\n  { name: \"Liechtenstein\", iso2: \"LI\", iso3: \"LIE\" },\n  { name: \"Lithuania\", iso2: \"LT\", iso3: \"LTU\" },\n  { name: \"Luxembourg\", iso2: \"LU\", iso3: \"LUX\" },\n  { name: \"MS Zaandam\" },\n  { name: \"Madagascar\", iso2: \"MG\", iso3: \"MDG\" },\n  { name: \"Malaysia\", iso2: \"MY\", iso3: \"MYS\" },\n  { name: \"Maldives\", iso2: \"MV\", iso3: \"MDV\" },\n  { name: \"Mali\", iso2: \"ML\", iso3: \"MLI\" },\n  { name: \"Malawi\", iso2: \"MW\", iso3: \"MWI\" },\n  { name: \"Malta\", iso2: \"MT\", iso3: \"MLT\" },\n  { name: \"Côte d'Ivoire\", iso2: \"CV\", iso3: \"CIV\" },\n  { name: \"Mauritania\", iso2: \"MR\", iso3: \"MRT\" },\n  { name: \"Mauritius\", iso2: \"MU\", iso3: \"MUS\" },\n  { name: \"Mexico\", iso2: \"MX\", iso3: \"MEX\" },\n  { name: \"Moldova\", iso2: \"MD\", iso3: \"MDA\" },\n  { name: \"Monaco\", iso2: \"MC\", iso3: \"MCO\" },\n  { name: \"Mongolia\", iso2: \"MN\", iso3: \"MNG\" },\n  { name: \"Montenegro\", iso2: \"ME\", iso3: \"MNE\" },\n  { name: \"Morocco\", iso2: \"MA\", iso3: \"MAR\" },\n  { name: \"Mozambique\", iso2: \"MZ\", iso3: \"MOZ\" },\n  { name: \"Namibia\", iso2: \"NA\", iso3: \"NAM\" },\n  { name: \"Nepal\", iso2: \"NP\", iso3: \"NPL\" },\n  { name: \"Netherlands\", iso2: \"NL\", iso3: \"NLD\" },\n  { name: \"New Zealand\", iso2: \"NZ\", iso3: \"NZL\" },\n  { name: \"Nicaragua\", iso2: \"NI\", iso3: \"NIC\" },\n  { name: \"Niger\", iso2: \"NE\", iso3: \"NER\" },\n  { name: \"Nigeria\", iso2: \"NG\", iso3: \"NGA\" },\n  { name: \"North Macedonia\" },\n  { name: \"Eswatini\", iso2: \"SWZ\", iso3: \"SWZ\" },\n  { name: \"Norway\", iso2: \"NO\", iso3: \"NOR\" },\n  { name: \"Oman\", iso2: \"OM\", iso3: \"OMN\" },\n  { name: \"Pakistan\", iso2: \"PK\", iso3: \"PAK\" },\n  { name: \"Panama\", iso2: \"PA\", iso3: \"PAN\" },\n  { name: \"Papua New Guinea\", iso2: \"PG\", iso3: \"PNG\" },\n  { name: \"Paraguay\", iso2: \"PY\", iso3: \"PRY\" },\n  { name: \"Peru\", iso2: \"PE\", iso3: \"PER\" },\n  { name: \"Philippines\", iso2: \"PH\", iso3: \"PHL\" },\n  { name: \"Poland\", iso2: \"PL\", iso3: \"POL\" },\n  { name: \"Portugal\", iso2: \"PT\", iso3: \"PRT\" },\n  { name: \"Qatar\", iso2: \"QA\", iso3: \"QAT\" },\n  { name: \"Romania\", iso2: \"RO\", iso3: \"ROU\" },\n  { name: \"Russia\", iso2: \"RU\", iso3: \"RUS\" },\n  { name: \"Rwanda\", iso2: \"RW\", iso3: \"RWA\" },\n  { name: \"Saint Kitts and Nevis\", iso2: \"KN\", iso3: \"KNA\" },\n  { name: \"Saint Lucia\", iso2: \"LC\", iso3: \"LCA\" },\n  { name: \"Saint Vincent\", iso2: \"VC\", iso3: \"VCT\" },\n  { name: \"San Marino\", iso2: \"SM\", iso3: \"SMR\" },\n  { name: \"Saudi Arabia\", iso2: \"SA\", iso3: \"SAU\" },\n  { name: \"West Bank/Gaza\", iso2: \"WB\", iso3: \"WBG\" },\n  { name: \"Senegal\", iso2: \"SN\", iso3: \"SEN\" },\n  { name: \"Serbia\", iso2: \"RS\", iso3: \"SRB\" },\n  { name: \"Seychelles\", iso2: \"SC\", iso3: \"SYC\" },\n  { name: \"Republic of Congo\", iso2: \"CG\", iso3: \"COG\" },\n  { name: \"Sierra Leone\", iso2: \"SL\", iso3: \"SLE\" },\n  { name: \"Singapore\", iso2: \"SG\", iso3: \"SGP\" },\n  { name: \"Slovakia\", iso2: \"SK\", iso3: \"SVK\" },\n  { name: \"Slovenia\", iso2: \"SI\", iso3: \"SVN\" },\n  { name: \"Somalia\", iso2: \"SO\", iso3: \"SOM\" },\n  { name: \"Vatican\", iso2: \"VA\", iso3: \"VAT\" },\n  { name: \"Cape Verde\", iso2: \"CPV\", iso3: \"CPV\" },\n  { name: \"Port of Namibe\", iso2: \"MSZ\", iso3: \"MSZ\" },\n  { name: \"North Macedonia\", iso2: \"MKD\", iso3: \"MKD\" },\n  { name: \"Bali\", iso2: \"DPS\", iso3: \"DPS\" },\n  { name: \"South Africa\", iso2: \"ZA\", iso3: \"ZAF\" },\n  { name: \"Spain\", iso2: \"ES\", iso3: \"ESP\" },\n  { name: \"Sri Lanka\", iso2: \"LK\", iso3: \"LKA\" },\n  { name: \"Sudan\", iso2: \"SD\", iso3: \"SDN\" },\n  { name: \"Suriname\", iso2: \"SR\", iso3: \"SUR\" },\n  { name: \"Sweden\", iso2: \"SE\", iso3: \"SWE\" },\n  { name: \"Switzerland\", iso2: \"CH\", iso3: \"CHE\" },\n  { name: \"Syria\", iso2: \"SY\", iso3: \"SYR\" },\n  { name: \"Taiwan*\", iso2: \"TW\", iso3: \"TWN\" },\n  { name: \"Tanzania\", iso2: \"TZ\", iso3: \"TZA\" },\n  { name: \"Thailand\", iso2: \"TH\", iso3: \"THA\" },\n  { name: \"Timor-Leste\", iso2: \"TL\", iso3: \"TLS\" },\n  { name: \"Togo\", iso2: \"TG\", iso3: \"TGO\" },\n  { name: \"Trinidad and Tobago\", iso2: \"TT\", iso3: \"TTO\" },\n  { name: \"Tunisia\", iso2: \"TN\", iso3: \"TUN\" },\n  { name: \"Turkey\", iso2: \"TR\", iso3: \"TUR\" },\n  { name: \"US\", iso2: \"US\", iso3: \"USA\" },\n  { name: \"Uganda\", iso2: \"UG\", iso3: \"UGA\" },\n  { name: \"Ukraine\", iso2: \"UA\", iso3: \"UKR\" },\n  { name: \"UAE\", iso2: \"AE\", iso3: \"ARE\" },\n  { name: \"United Kingdom\", iso2: \"GB\", iso3: \"GBR\" },\n  { name: \"Uruguay\", iso2: \"UY\", iso3: \"URY\" },\n  { name: \"Uzbekistan\", iso2: \"UZ\", iso3: \"UZB\" },\n  { name: \"Venezuela\", iso2: \"VE\", iso3: \"VEN\" },\n  { name: \"Vietnam\", iso2: \"VN\", iso3: \"VNM\" },\n  { name: \"West Bank and Gaza\" },\n  { name: \"Zambia\", iso2: \"ZM\", iso3: \"ZMB\" },\n  { name: \"Zimbabwe\", iso2: \"ZW\", iso3: \"ZWE\" },\n];\n\nlet isoDictionaryAll = {};\nfor (let i = 0; i < allCountries.length; i++) {\n  let temp = allCountries[i];\n  isoDictionaryAll[temp[\"iso3\"]] = temp[\"name\"];\n}\n\nconst swap = (json) => {\n  var ret = {};\n  for (var key in json) {\n    ret[json[key]] = key;\n  }\n  return ret;\n};\n\nlet isoDictionaryAllReversed = swap(isoDictionaryAll);\n\nconst countryData = [\n  countries,\n  countriesFull,\n  isoDictionary,\n  allCountries,\n  isoDictionaryAll,\n  isoDictionaryAllReversed,\n];\n\nexport default countryData;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div``;\n\nexport const Nav = styled.nav``;","const countries = [\n  { id: 4, name: \"أفغانستان\", alpha2: \"af\", alpha3: \"afg\" },\n  { id: 8, name: \"ألبانيا\", alpha2: \"al\", alpha3: \"alb\" },\n  { id: 12, name: \"الجزائر\", alpha2: \"dz\", alpha3: \"dza\" },\n  { id: 20, name: \"أندورا\", alpha2: \"ad\", alpha3: \"and\" },\n  { id: 24, name: \"أنغولا\", alpha2: \"ao\", alpha3: \"ago\" },\n  { id: 28, name: \"أنتيغوا وباربودا\", alpha2: \"ag\", alpha3: \"atg\" },\n  { id: 32, name: \"الأرجنتين\", alpha2: \"ar\", alpha3: \"arg\" },\n  { id: 51, name: \"أرمينيا\", alpha2: \"am\", alpha3: \"arm\" },\n  { id: 36, name: \"أستراليا\", alpha2: \"au\", alpha3: \"aus\" },\n  { id: 40, name: \"النمسا\", alpha2: \"at\", alpha3: \"aut\" },\n  { id: 31, name: \"أذربيجان\", alpha2: \"az\", alpha3: \"aze\" },\n  { id: 44, name: \"باهاماس\", alpha2: \"bs\", alpha3: \"bhs\" },\n  { id: 48, name: \"البحرين\", alpha2: \"bh\", alpha3: \"bhr\" },\n  { id: 50, name: \"بنغلاديش\", alpha2: \"bd\", alpha3: \"bgd\" },\n  { id: 52, name: \"باربادوس\", alpha2: \"bb\", alpha3: \"brb\" },\n  { id: 112, name: \"روسيا البيضاء\", alpha2: \"by\", alpha3: \"blr\" },\n  { id: 56, name: \"بلجيكا\", alpha2: \"be\", alpha3: \"bel\" },\n  { id: 84, name: \"بليز\", alpha2: \"bz\", alpha3: \"blz\" },\n  { id: 204, name: \"بنين\", alpha2: \"bj\", alpha3: \"ben\" },\n  { id: 64, name: \"بوتان\", alpha2: \"bt\", alpha3: \"btn\" },\n  { id: 68, name: \"بوليفيا\", alpha2: \"bo\", alpha3: \"bol\" },\n  { id: 70, name: \"البوسنة والهرسك\", alpha2: \"ba\", alpha3: \"bih\" },\n  { id: 72, name: \"بوتسوانا\", alpha2: \"bw\", alpha3: \"bwa\" },\n  { id: 76, name: \"البرازيل\", alpha2: \"br\", alpha3: \"bra\" },\n  { id: 96, name: \"بروناي\", alpha2: \"bn\", alpha3: \"brn\" },\n  { id: 100, name: \"بلغاريا\", alpha2: \"bg\", alpha3: \"bgr\" },\n  { id: 854, name: \"بوركينا فاسو\", alpha2: \"bf\", alpha3: \"bfa\" },\n  { id: 108, name: \"بوروندي\", alpha2: \"bi\", alpha3: \"bdi\" },\n  { id: 116, name: \"كمبوديا\", alpha2: \"kh\", alpha3: \"khm\" },\n  { id: 120, name: \"الكاميرون\", alpha2: \"cm\", alpha3: \"cmr\" },\n  { id: 124, name: \"كندا\", alpha2: \"ca\", alpha3: \"can\" },\n  { id: 132, name: \"الرأس الأخضر\", alpha2: \"cv\", alpha3: \"cpv\" },\n  { id: 140, name: \"جمهورية أفريقيا الوسطى\", alpha2: \"cf\", alpha3: \"caf\" },\n  { id: 148, name: \"تشاد\", alpha2: \"td\", alpha3: \"tcd\" },\n  { id: 152, name: \"تشيلي\", alpha2: \"cl\", alpha3: \"chl\" },\n  { id: 156, name: \"الصين\", alpha2: \"cn\", alpha3: \"chn\" },\n  { id: 170, name: \"كولومبيا\", alpha2: \"co\", alpha3: \"col\" },\n  { id: 174, name: \"جزر القمر\", alpha2: \"km\", alpha3: \"com\" },\n  { id: 178, name: \"جمهورية الكونغو\", alpha2: \"cg\", alpha3: \"cog\" },\n  { id: 180, name: \"جمهورية الكونغو الديمقراطية\", alpha2: \"cd\", alpha3: \"cod\" },\n  { id: 188, name: \"كوستاريكا\", alpha2: \"cr\", alpha3: \"cri\" },\n  { id: 384, name: \"ساحل العاج\", alpha2: \"ci\", alpha3: \"civ\" },\n  { id: 191, name: \"كرواتيا\", alpha2: \"hr\", alpha3: \"hrv\" },\n  { id: 192, name: \"كوبا\", alpha2: \"cu\", alpha3: \"cub\" },\n  { id: 196, name: \"قبرص\", alpha2: \"cy\", alpha3: \"cyp\" },\n  { id: 203, name: \"جمهورية التشيك\", alpha2: \"cz\", alpha3: \"cze\" },\n  { id: 208, name: \"الدنمارك\", alpha2: \"dk\", alpha3: \"dnk\" },\n  { id: 262, name: \"جيبوتي\", alpha2: \"dj\", alpha3: \"dji\" },\n  { id: 212, name: \"دومينيكا\", alpha2: \"dm\", alpha3: \"dma\" },\n  { id: 214, name: \"جمهورية الدومينيكان\", alpha2: \"do\", alpha3: \"dom\" },\n  { id: 218, name: \"الإكوادور\", alpha2: \"ec\", alpha3: \"ecu\" },\n  { id: 818, name: \"مصر\", alpha2: \"eg\", alpha3: \"egy\" },\n  { id: 222, name: \"السلفادور\", alpha2: \"sv\", alpha3: \"slv\" },\n  { id: 226, name: \"غينيا الاستوائية\", alpha2: \"gq\", alpha3: \"gnq\" },\n  { id: 232, name: \"إريتريا\", alpha2: \"er\", alpha3: \"eri\" },\n  { id: 233, name: \"إستونيا\", alpha2: \"ee\", alpha3: \"est\" },\n  { id: 231, name: \"إثيوبيا\", alpha2: \"et\", alpha3: \"eth\" },\n  { id: 242, name: \"فيجي\", alpha2: \"fj\", alpha3: \"fji\" },\n  { id: 246, name: \"فنلندا\", alpha2: \"fi\", alpha3: \"fin\" },\n  { id: 250, name: \"فرنسا\", alpha2: \"fr\", alpha3: \"fra\" },\n  { id: 266, name: \"الغابون\", alpha2: \"ga\", alpha3: \"gab\" },\n  { id: 270, name: \"غامبيا\", alpha2: \"gm\", alpha3: \"gmb\" },\n  { id: 268, name: \"جورجيا\", alpha2: \"ge\", alpha3: \"geo\" },\n  { id: 276, name: \"ألمانيا\", alpha2: \"de\", alpha3: \"deu\" },\n  { id: 288, name: \"غانا\", alpha2: \"gh\", alpha3: \"gha\" },\n  { id: 300, name: \"اليونان\", alpha2: \"gr\", alpha3: \"grc\" },\n  { id: 308, name: \"غرينادا\", alpha2: \"gd\", alpha3: \"grd\" },\n  { id: 320, name: \"غواتيمالا\", alpha2: \"gt\", alpha3: \"gtm\" },\n  { id: 324, name: \"غينيا\", alpha2: \"gn\", alpha3: \"gin\" },\n  { id: 624, name: \"غينيا بيساو\", alpha2: \"gw\", alpha3: \"gnb\" },\n  { id: 328, name: \"غيانا\", alpha2: \"gy\", alpha3: \"guy\" },\n  { id: 332, name: \"هايتي\", alpha2: \"ht\", alpha3: \"hti\" },\n  { id: 340, name: \"هندوراس\", alpha2: \"hn\", alpha3: \"hnd\" },\n  { id: 348, name: \"المجر\", alpha2: \"hu\", alpha3: \"hun\" },\n  { id: 352, name: \"آيسلندا\", alpha2: \"is\", alpha3: \"isl\" },\n  { id: 356, name: \"الهند\", alpha2: \"in\", alpha3: \"ind\" },\n  { id: 360, name: \"إندونيسيا\", alpha2: \"id\", alpha3: \"idn\" },\n  { id: 364, name: \"إيران\", alpha2: \"ir\", alpha3: \"irn\" },\n  { id: 368, name: \"العراق\", alpha2: \"iq\", alpha3: \"irq\" },\n  { id: 372, name: \"أيرلندا\", alpha2: \"ie\", alpha3: \"irl\" },\n  { id: 376, name: \"إسرائيل\", alpha2: \"il\", alpha3: \"isr\" },\n  { id: 380, name: \"إيطاليا\", alpha2: \"it\", alpha3: \"ita\" },\n  { id: 388, name: \"جامايكا\", alpha2: \"jm\", alpha3: \"jam\" },\n  { id: 392, name: \"اليابان\", alpha2: \"jp\", alpha3: \"jpn\" },\n  { id: 400, name: \"الأردن\", alpha2: \"jo\", alpha3: \"jor\" },\n  { id: 398, name: \"كازاخستان\", alpha2: \"kz\", alpha3: \"kaz\" },\n  { id: 404, name: \"كينيا\", alpha2: \"ke\", alpha3: \"ken\" },\n  { id: 296, name: \"كيريباتي\", alpha2: \"ki\", alpha3: \"kir\" },\n  { id: 408, name: \"كوريا الشمالية\", alpha2: \"kp\", alpha3: \"prk\" },\n  { id: 410, name: \"كوريا الجنوبية\", alpha2: \"kr\", alpha3: \"kor\" },\n  { id: 414, name: \"الكويت\", alpha2: \"kw\", alpha3: \"kwt\" },\n  { id: 417, name: \"قيرغيزستان\", alpha2: \"kg\", alpha3: \"kgz\" },\n  { id: 418, name: \"لاوس\", alpha2: \"la\", alpha3: \"lao\" },\n  { id: 428, name: \"لاتفيا\", alpha2: \"lv\", alpha3: \"lva\" },\n  { id: 422, name: \"لبنان\", alpha2: \"lb\", alpha3: \"lbn\" },\n  { id: 426, name: \"ليسوتو\", alpha2: \"ls\", alpha3: \"lso\" },\n  { id: 430, name: \"ليبيريا\", alpha2: \"lr\", alpha3: \"lbr\" },\n  { id: 434, name: \"ليبيا\", alpha2: \"ly\", alpha3: \"lby\" },\n  { id: 438, name: \"ليختنشتاين\", alpha2: \"li\", alpha3: \"lie\" },\n  { id: 440, name: \"ليتوانيا\", alpha2: \"lt\", alpha3: \"ltu\" },\n  { id: 442, name: \"لوكسمبورغ\", alpha2: \"lu\", alpha3: \"lux\" },\n  { id: 807, name: \"مقدونيا\", alpha2: \"mk\", alpha3: \"mkd\" },\n  { id: 450, name: \"مدغشقر\", alpha2: \"mg\", alpha3: \"mdg\" },\n  { id: 454, name: \"مالاوي\", alpha2: \"mw\", alpha3: \"mwi\" },\n  { id: 458, name: \"ماليزيا\", alpha2: \"my\", alpha3: \"mys\" },\n  { id: 462, name: \"جزر المالديف\", alpha2: \"mv\", alpha3: \"mdv\" },\n  { id: 466, name: \"مالي\", alpha2: \"ml\", alpha3: \"mli\" },\n  { id: 470, name: \"مالطا\", alpha2: \"mt\", alpha3: \"mlt\" },\n  { id: 584, name: \"جزر مارشال\", alpha2: \"mh\", alpha3: \"mhl\" },\n  { id: 478, name: \"موريتانيا\", alpha2: \"mr\", alpha3: \"mrt\" },\n  { id: 480, name: \"موريشيوس\", alpha2: \"mu\", alpha3: \"mus\" },\n  { id: 484, name: \"المكسيك\", alpha2: \"mx\", alpha3: \"mex\" },\n  { id: 583, name: \"ولايات ميكرونيسيا المتحدة\", alpha2: \"fm\", alpha3: \"fsm\" },\n  { id: 504, name: \"المغرب\", alpha2: \"ma\", alpha3: \"mar\" },\n  { id: 498, name: \"مولدوفا\", alpha2: \"md\", alpha3: \"mda\" },\n  { id: 492, name: \"موناكو\", alpha2: \"mc\", alpha3: \"mco\" },\n  { id: 496, name: \"منغوليا\", alpha2: \"mn\", alpha3: \"mng\" },\n  { id: 499, name: \"الجبل الأسود\", alpha2: \"me\", alpha3: \"mne\" },\n  { id: 508, name: \"موزمبيق\", alpha2: \"mz\", alpha3: \"moz\" },\n  { id: 104, name: \"ميانمار\", alpha2: \"mm\", alpha3: \"mmr\" },\n  { id: 516, name: \"ناميبيا\", alpha2: \"na\", alpha3: \"nam\" },\n  { id: 520, name: \"ناورو\", alpha2: \"nr\", alpha3: \"nru\" },\n  { id: 524, name: \"نيبال\", alpha2: \"np\", alpha3: \"npl\" },\n  { id: 528, name: \"هولندا\", alpha2: \"nl\", alpha3: \"nld\" },\n  { id: 554, name: \"نيوزيلندا\", alpha2: \"nz\", alpha3: \"nzl\" },\n  { id: 558, name: \"نيكاراغوا\", alpha2: \"ni\", alpha3: \"nic\" },\n  { id: 562, name: \"النيجر\", alpha2: \"ne\", alpha3: \"ner\" },\n  { id: 566, name: \"نيجيريا\", alpha2: \"ng\", alpha3: \"nga\" },\n  { id: 578, name: \"النرويج\", alpha2: \"no\", alpha3: \"nor\" },\n  { id: 512, name: \"عمان\", alpha2: \"om\", alpha3: \"omn\" },\n  { id: 586, name: \"باكستان\", alpha2: \"pk\", alpha3: \"pak\" },\n  { id: 585, name: \"بالاو\", alpha2: \"pw\", alpha3: \"plw\" },\n  { id: 591, name: \"بنما\", alpha2: \"pa\", alpha3: \"pan\" },\n  { id: 598, name: \"بابوا غينيا الجديدة\", alpha2: \"pg\", alpha3: \"png\" },\n  { id: 600, name: \"باراغواي\", alpha2: \"py\", alpha3: \"pry\" },\n  { id: 604, name: \"بيرو\", alpha2: \"pe\", alpha3: \"per\" },\n  { id: 608, name: \"الفلبين\", alpha2: \"ph\", alpha3: \"phl\" },\n  { id: 616, name: \"بولندا\", alpha2: \"pl\", alpha3: \"pol\" },\n  { id: 620, name: \"البرتغال\", alpha2: \"pt\", alpha3: \"prt\" },\n  { id: 634, name: \"قطر\", alpha2: \"qa\", alpha3: \"qat\" },\n  { id: 642, name: \"رومانيا\", alpha2: \"ro\", alpha3: \"rou\" },\n  { id: 643, name: \"روسيا\", alpha2: \"ru\", alpha3: \"rus\" },\n  { id: 646, name: \"رواندا\", alpha2: \"rw\", alpha3: \"rwa\" },\n  { id: 659, name: \"سانت كيتس ونيفيس\", alpha2: \"kn\", alpha3: \"kna\" },\n  { id: 662, name: \"سانت لوسيا\", alpha2: \"lc\", alpha3: \"lca\" },\n  { id: 670, name: \"سانت فينسنت والغرينادين\", alpha2: \"vc\", alpha3: \"vct\" },\n  { id: 882, name: \"ساموا\", alpha2: \"ws\", alpha3: \"wsm\" },\n  { id: 674, name: \"سان مارينو\", alpha2: \"sm\", alpha3: \"smr\" },\n  { id: 678, name: \"ساو تومي وبرينسيب\", alpha2: \"st\", alpha3: \"stp\" },\n  { id: 682, name: \"السعودية\", alpha2: \"sa\", alpha3: \"sau\" },\n  { id: 686, name: \"السنغال\", alpha2: \"sn\", alpha3: \"sen\" },\n  { id: 688, name: \"صربيا\", alpha2: \"rs\", alpha3: \"srb\" },\n  { id: 690, name: \"سيشل\", alpha2: \"sc\", alpha3: \"syc\" },\n  { id: 694, name: \"سيراليون\", alpha2: \"sl\", alpha3: \"sle\" },\n  { id: 702, name: \"سنغافورة\", alpha2: \"sg\", alpha3: \"sgp\" },\n  { id: 703, name: \"سلوفاكيا\", alpha2: \"sk\", alpha3: \"svk\" },\n  { id: 705, name: \"سلوفينيا\", alpha2: \"si\", alpha3: \"svn\" },\n  { id: 90, name: \"جزر سليمان\", alpha2: \"sb\", alpha3: \"slb\" },\n  { id: 706, name: \"الصومال\", alpha2: \"so\", alpha3: \"som\" },\n  { id: 710, name: \"جنوب أفريقيا\", alpha2: \"za\", alpha3: \"zaf\" },\n  { id: 728, name: \"جنوب السودان\", alpha2: \"ss\", alpha3: \"ssd\" },\n  { id: 724, name: \"إسبانيا\", alpha2: \"es\", alpha3: \"esp\" },\n  { id: 144, name: \"سريلانكا\", alpha2: \"lk\", alpha3: \"lka\" },\n  { id: 729, name: \"السودان\", alpha2: \"sd\", alpha3: \"sdn\" },\n  { id: 740, name: \"سورينام\", alpha2: \"sr\", alpha3: \"sur\" },\n  { id: 748, name: \"سوازيلاند\", alpha2: \"sz\", alpha3: \"swz\" },\n  { id: 752, name: \"السويد\", alpha2: \"se\", alpha3: \"swe\" },\n  { id: 756, name: \"سويسرا\", alpha2: \"ch\", alpha3: \"che\" },\n  { id: 760, name: \"سوريا\", alpha2: \"sy\", alpha3: \"syr\" },\n  { id: 762, name: \"طاجيكستان\", alpha2: \"tj\", alpha3: \"tjk\" },\n  { id: 834, name: \"تنزانيا\", alpha2: \"tz\", alpha3: \"tza\" },\n  { id: 764, name: \"تايلاند\", alpha2: \"th\", alpha3: \"tha\" },\n  { id: 626, name: \"تيمور الشرقية\", alpha2: \"tl\", alpha3: \"tls\" },\n  { id: 768, name: \"توغو\", alpha2: \"tg\", alpha3: \"tgo\" },\n  { id: 776, name: \"تونغا\", alpha2: \"to\", alpha3: \"ton\" },\n  { id: 780, name: \"ترينيداد وتوباغو\", alpha2: \"tt\", alpha3: \"tto\" },\n  { id: 788, name: \"تونس\", alpha2: \"tn\", alpha3: \"tun\" },\n  { id: 792, name: \"تركيا\", alpha2: \"tr\", alpha3: \"tur\" },\n  { id: 795, name: \"تركمانستان\", alpha2: \"tm\", alpha3: \"tkm\" },\n  { id: 798, name: \"توفالو\", alpha2: \"tv\", alpha3: \"tuv\" },\n  { id: 800, name: \"أوغندا\", alpha2: \"ug\", alpha3: \"uga\" },\n  { id: 804, name: \"أوكرانيا\", alpha2: \"ua\", alpha3: \"ukr\" },\n  { id: 784, name: \"الإمارات \", alpha2: \"ae\", alpha3: \"are\" },\n  { id: 826, name: \"المملكة المتحدة\", alpha2: \"gb\", alpha3: \"gbr\" },\n  { id: 840, name: \"الولايات المتحدة\", alpha2: \"us\", alpha3: \"usa\" },\n  { id: 858, name: \"الأوروغواي\", alpha2: \"uy\", alpha3: \"ury\" },\n  { id: 860, name: \"أوزبكستان\", alpha2: \"uz\", alpha3: \"uzb\" },\n  { id: 548, name: \"فانواتو\", alpha2: \"vu\", alpha3: \"vut\" },\n  { id: 862, name: \"فنزويلا\", alpha2: \"ve\", alpha3: \"ven\" },\n  { id: 704, name: \"فيتنام\", alpha2: \"vn\", alpha3: \"vnm\" },\n  { id: 887, name: \"اليمن\", alpha2: \"ye\", alpha3: \"yem\" },\n  { id: 894, name: \"زامبيا\", alpha2: \"zm\", alpha3: \"zmb\" },\n  { id: 716, name: \"زيمبابوي\", alpha2: \"zw\", alpha3: \"zwe\" }\n];\n\nlet dictionary = {};\nfor (let i = 0; i < countries.length; i++) {\n  let temp = countries[i];\n  dictionary[temp[\"alpha3\"].toUpperCase()] = temp[\"name\"];\n}\n\nconst swap = json => {\n  var ret = {};\n  for (var key in json) {\n    ret[json[key]] = key;\n  }\n  return ret;\n};\n\nlet dictionaryReversed = swap(dictionary);\n\nexport default [dictionary, dictionaryReversed];\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Loading = () => (\n  <div className=\"spinner mx-auto text-center\">\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <FontAwesomeIcon icon={faSpinner} spin size=\"5x\" />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n  </div>\n);\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Loading from \"./Loading\";\nimport { connect } from \"react-redux\";\nimport { setData } from \"../redux/actions\";\n\nclass Counter extends Component {\n  state = {\n    data: null,\n    loading: true\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.loading !== this.props.loading) {\n      this.setState({ loading: !this.props.loading });\n    }\n  }\n\n  render() {\n    let confirmedRows = <></>;\n    let deadRows = <></>;\n    let recoveredRows = <></>;\n\n    const confirmedData = this.props.data[0];\n    const deathsData = this.props.data[1];\n    const recoveredData = this.props.data[2];\n\n    confirmedRows = confirmedData.map(country => (\n      <tr>\n        <td>\n          &nbsp;&nbsp;&nbsp;\n          <font style={{ color: \"red\", fontSize: \"18px\" }}>\n            {country.confirmed}\n          </font>\n          <font style={{ fontSize: \"16px\", color: \"#e1e5e8\" }}>\n            &nbsp;&nbsp;\n            {country.name}\n          </font>\n        </td>\n      </tr>\n    ));\n    deadRows = deathsData.map(country => (\n      <tr>\n        <td>\n          &nbsp;&nbsp;&nbsp;\n          <font style={{ color: \"red\", fontSize: \"18px\" }}>\n            {country.deaths}\n          </font>\n          <font style={{ fontSize: \"16px\", color: \"#e1e5e8\" }}>\n            &nbsp;&nbsp;\n            {country.name}\n          </font>\n        </td>\n      </tr>\n    ));\n    recoveredRows = recoveredData.map(country => (\n      <tr>\n        <td>\n          &nbsp;&nbsp;&nbsp;\n          <font style={{ color: \"red\", fontSize: \"18px\" }}>\n            {country.recovered}\n          </font>\n          <font style={{ fontSize: \"16px\", color: \"#e1e5e8\" }}>\n            &nbsp;&nbsp;\n            {country.name}\n          </font>\n        </td>\n      </tr>\n    ));\n\n    recoveredData.map(country => console.log(country));\n\n    if (this.props.loading) {\n      return <Loading />;\n    }\n    return (\n      <div className=\"counter-nav\">\n        <Tabs defaultActiveKey=\"confirmed\" id=\"counter\">\n          <Tab\n            eventKey=\"confirmed\"\n            title={this.props.language ? \"Confirmed\" : \"الإجمالي\"}\n          >\n            <div className=\"card mx-auto counter list my-custom-scrollbar\">\n              <table class=\"table-dark table-bordered \">\n                <tbody>{this.props.loading ? \"\" : confirmedRows}</tbody>\n              </table>\n            </div>\n          </Tab>\n          <Tab\n            eventKey=\"deaths\"\n            title={this.props.language ? \"Deaths\" : \"حالات وفاة\"}\n          >\n            <div className=\"card mx-auto counter list my-custom-scrollbar\">\n              <table class=\"table-dark table-bordered \">\n                <tbody> {this.props.loading ? \"\" : deadRows}</tbody>\n              </table>\n            </div>\n          </Tab>\n          <Tab\n            eventKey=\"recovered\"\n            title={this.props.language ? \"Recovered\" : \"حالات شفاء\"}\n          >\n            <div className=\"card mx-auto counter list my-custom-scrollbar\">\n              <table class=\"table-dark table-bordered\">\n                <tbody> {this.props.loading ? \"\" : recoveredRows}</tbody>\n              </table>\n            </div>\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setData: data => dispatch(setData(data))\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Counter);\n","import { SET_COUNTRY, SET_DATA, LOADING, CHANGE_LANGUAGE } from \"./actionTypes\";\n\n// const instance = axios.create({\n//   baseURL: \"https://covid19.mathdro.id/api/countries/\",\n// });\n\n// export const fetchCountryData = (country) => async (dispatch) => {\n//   try {\n//     const res = await instance.get(`${country}`);\n//     const countryData = res.data;\n//     dispatch({ type: SET_COUNTRY, payload: countryData });\n//   } catch (err) {\n//     console.error(err);\n//   }\n// };\n\nexport const setData = data => {\n  return { type: SET_DATA, payload: data };\n};\n\nexport const loading = condition => {\n  return { type: LOADING, payload: condition };\n};\n\nexport const setCountry = country => {\n  return { type: SET_COUNTRY, payload: country };\n};\n\nexport const changeLanguage = language => {\n  return { type: CHANGE_LANGUAGE, payload: language };\n};\n","export const SET_COUNTRY_DATA = \"SET_COUNTRY_DATA\";\nexport const SET_COUNTRY = \"SET_COUNTRY\";\nexport const SET_DATA = \"SET_DATA\";\nexport const LOADING = \"LOADING\";\nexport const CHANGE_LANGUAGE = \"CHANGE_LANGUAGE\";\n","import React from \"react\";\nimport { Container } from \"./styled-components\";\n\nconst TotalCounter = ({ data, language }) => {\n  return (\n    <Container className=\"container-fluid h-100 padded \">\n      <Container className=\"row padded h-33\">\n        <Container className=\"card total-card is-card-dark is-total-text\">\n          <div style={{ fontSize: \"18px\", color: \"#e1e5e8\" }}>\n            {language ? \"Confirmed\" : \"الإجمالي\"}\n          </div>\n          {data[0]}\n        </Container>\n      </Container>\n\n      <Container className=\"row padded h-33\">\n        <Container className=\"card total-card is-card-dark is-total-text\">\n          <div style={{ fontSize: \"18px\", color: \"#e1e5e8\" }}>\n            {language ? \"Deaths\" : \"حالات وفاة\"}\n          </div>\n          {data[1]}\n        </Container>\n      </Container>\n\n      <Container className=\"row padded h-33\">\n        <Container className=\"card total-card is-card-dark is-total-text\">\n          <div style={{ fontSize: \"18px\", color: \"#e1e5e8\" }}>\n            {language ? \"Recovered\" : \"حالات شفاء\"}\n          </div>\n\n          {data[2]}\n        </Container>\n      </Container>\n    </Container>\n  );\n};\n\nexport default TotalCounter;\n","import arabcountries from \"./arabicCountries\";\nimport countrydata from \"./countries\";\n\nconst translate = {\n  confirmed: \"الإجمالي\",\n  deaths: \"حالات وفاة\",\n  recovered: \"حالات شفاء\",\n  \"daily increase\": \"اصابات يومية\",\n  logarithmic: \"لوغاريتمي\"\n};\n\nexport default translate;\n","import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport colormap from \"colormap\";\nimport countryData from \"./countries\";\nimport Loading from \"./Loading\";\nimport translate from \"./translation\";\nimport arabicdictionaries from \"./arabicCountries\";\n\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst dictionary = arabicdictionaries[0];\nconst countries = countryData[0];\nconst countriesFull = countryData[1];\n\nclass TimeGraph extends Component {\n  state = {\n    selector: \"confirmed\",\n    logarithmic: false\n  };\n\n  capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  setupTicks = (arr, delta, date) => {\n    const l = arr.length;\n    delta = Math.floor(l / delta);\n    let newArr = [];\n    for (let i = 0; i < arr.length; i = i + delta) {\n      if (date) {\n        newArr.push(this.formatDate(arr[i]));\n      } else {\n        newArr.push(arr[i]);\n      }\n    }\n    return newArr;\n  };\n\n  handleOnClick = selected => {\n    this.setState({ selector: selected });\n  };\n  handleSwitch = () => {\n    this.setState({ logarithmic: !this.state.logarithmic });\n  };\n\n  render() {\n    const selectors = [\"confirmed\", \"deaths\", \"recovered\"];\n\n    const buttons = selectors.map(type => (\n      <button\n        className={\n          this.state.selector === type\n            ? \"btn btn-outline-dark clicked\"\n            : \"btn btn-outline-dark\"\n        }\n        style={{ padding: \"0vh 4.5vh 0vh 4.5vh\" }}\n        onClick={() => this.handleOnClick(type)}\n      >\n        <font style={{ fontSize: \"1.5vh\" }}>\n          {\" \"}\n          {this.props.language ? type : translate[type]}\n        </font>\n      </button>\n    ));\n\n    const data = this.props.data;\n    let plotDataY = [[[]], [[]], [[]]],\n      plotDataX = [];\n    for (let iso in data) {\n      let countryObj = data[iso];\n      var confirmedArr = [],\n        deathsArr = [],\n        recoveredArr = [],\n        timeArr = [],\n        counter = 0,\n        dateArr = [];\n      for (let date in countryObj) {\n        var confirmed = countryObj[date].confirmed;\n        var deaths = countryObj[date].deaths;\n        var recovered = countryObj[date].recovered;\n        confirmedArr.push(confirmed);\n        deathsArr.push(deaths);\n        recoveredArr.push(recovered);\n        timeArr.push(counter);\n        dateArr.push(date);\n        counter++;\n      }\n      plotDataX.push(timeArr);\n      plotDataY[0].push(confirmedArr);\n      plotDataY[1].push(deathsArr);\n      plotDataY[2].push(recoveredArr);\n    }\n\n    let scatterData = [];\n    let select =\n      this.state.selector === \"confirmed\"\n        ? 0\n        : this.state.selector === \"deaths\"\n        ? 1\n        : this.state.selector === \"recovered\"\n        ? 2\n        : 3;\n\n    for (let i = 1; i < plotDataX.length + 1; i++) {\n      var trace = {\n        x: dateArr,\n        y: plotDataY[select][i],\n        type: \"scatter\",\n        name: this.props.language\n          ? countriesFull[i - 1]\n          : dictionary[countries[i - 1]]\n      };\n      scatterData.push(trace);\n    }\n\n    let logType = this.state.logarithmic ? \"log\" : \"null\";\n    const colorway = colormap({\n      colormap: \"jet\",\n      nshades: countries.length,\n      format: \"hex\",\n      alpha: 1\n    });\n\n    if (this.props.loading) {\n      return <Loading />;\n    }\n    return (\n      <div className=\" padded\">\n        &nbsp;&nbsp; <FontAwesomeIcon icon={faQuestionCircle} size=\"1x\" />{\" \"}\n        &nbsp;&nbsp; {buttons}\n        <div className=\"btn toggler\">\n          <div class=\"custom-control custom-switch \">\n            <input\n              type=\"checkbox\"\n              class=\"custom-control-input\"\n              onClick={() => this.handleSwitch()}\n              id=\"switch\"\n            />\n            <label class=\"custom-control-label\" for=\"switch\" />\n            <font style={{ fontSize: \"1.5vh\", color: \"#e1e5e8\" }}>\n              {\" \"}\n              {this.props.language ? \"Logarithmic\" : \"لوغاريتمي\"}\n            </font>\n          </div>\n        </div>\n        <div>\n          <Plot\n            data={scatterData}\n            layout={{\n              modebar: { bgcolor: \"rgba(255,255,255,0)\" },\n              font: { color: \"#e1e5e8\", size: 12 },\n              xaxis: { nticks: 15 },\n              yaxis: { type: logType },\n              colorway: colorway,\n              plot_bgcolor: \"#191d20\",\n              paper_bgcolor: \"#191d20\",\n              autosize: true,\n              height: 350,\n              hovermode: \"closest\",\n              margin: { l: 40, r: 20, t: 0, b: 0, pad: 0 },\n              legend: {\n                font: { size: 10 },\n                bgcolor: \"transparent\",\n                xanchor: \"center\",\n                yanchor: \"top\",\n                y: -0.1,\n                x: 0.5,\n                autosize: true,\n                orientation: \"h\"\n              }\n            }}\n            config={{\n              modeBarButtonsToRemove: [\n                \"toggleSpikelines\",\n                \"zoomIn2d\",\n                \"zoomOut2d\",\n                \"autoScale2d\",\n                \"hoverClosestCartesian\",\n                \"hoverCompareCartesian\"\n              ],\n              displaylogo: false\n            }}\n            useResizeHandler={true}\n            style={{ width: \"100%\", height: \"100%\" }}\n            modeBarButtonsToRemove={[\"toImage\"]}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TimeGraph;\n","import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport colormap from \"colormap\";\nimport countryData from \"./countries\";\nimport Loading from \"./Loading\";\nimport translate from \"./translation\";\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst countries = countryData[1];\n\nclass PieChart extends Component {\n  state = {\n    selector: \"confirmed\"\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.loading !== this.props.loading) {\n      this.setState({ loading: !this.props.loading });\n    }\n  }\n\n  handleOnClick = selected => {\n    this.setState({ selector: selected });\n  };\n\n  render() {\n    const selectors = [\"confirmed\", \"deaths\", \"recovered\"];\n\n    const buttons = selectors.map(type => (\n      <button\n        className={\n          this.state.selector === type\n            ? \"btn btn-outline-dark clicked\"\n            : \"btn btn-outline-dark\"\n        }\n        style={{ padding: \"0vh 3vh 0vh 3vh\" }}\n        onClick={() => this.handleOnClick(type)}\n      >\n        <font style={{ fontSize: \"1.5vh\" }}>\n          {this.props.language ? type : translate[type]}\n        </font>\n      </button>\n    ));\n\n    const confirmedData = this.props.data[0];\n    const deathsData = this.props.data[1];\n    const recoveredData = this.props.data[2];\n\n    let confirmedX = [],\n      confirmedY = [];\n    confirmedData.map(country => {\n      confirmedX.push(country.name);\n      confirmedY.push(country.confirmed);\n    });\n\n    let deathsX = [],\n      deathsY = [];\n    deathsData.map(country => {\n      deathsX.push(country.name);\n      deathsY.push(country.deaths);\n    });\n\n    let recoveredX = [],\n      recoveredY = [];\n    recoveredData.map(country => {\n      recoveredX.push(country.name);\n      recoveredY.push(country.recovered);\n    });\n\n    const colorway = colormap({\n      colormap: \"jet\",\n      nshades: countries.length,\n      format: \"hex\",\n      alpha: 1\n    });\n\n    let data = null;\n    if (this.state.selector === \"confirmed\") {\n      data = [\n        {\n          values: confirmedY,\n          labels: confirmedX,\n          type: \"pie\",\n          textinfo: \"label\",\n          rotation: \"-20\"\n        }\n      ];\n    } else if (this.state.selector === \"deaths\") {\n      data = [\n        {\n          values: deathsY,\n          labels: deathsX,\n          type: \"pie\",\n          textinfo: \"label\",\n          rotation: \"-20\"\n        }\n      ];\n    } else {\n      data = [\n        {\n          values: recoveredY,\n          labels: recoveredX,\n          type: \"pie\",\n          textinfo: \"label\",\n          rotation: \"-20\"\n        }\n      ];\n    }\n\n    if (this.props.loading && data) {\n      return <Loading />;\n    }\n    return (\n      <div className=\"padded\">\n        <div style={{ padding: \"0.25rem 0.0rem 0.35rem 0.0rem\" }}>\n          {\" \"}\n          &nbsp;&nbsp; <FontAwesomeIcon\n            icon={faQuestionCircle}\n            size=\"1x\"\n          />{\" \"}\n          &nbsp;&nbsp;\n          {buttons}\n        </div>\n\n        <div>\n          <Plot\n            data={data}\n            layout={{\n              modebar: { bgcolor: \"rgba(255,255,255,0)\" },\n              font: { color: \"#99aab5\", size: 11 },\n              showlegend: false,\n              colorway: colorway.reverse(),\n              plot_bgcolor: \"#191d20\",\n              paper_bgcolor: \"#191d20\",\n              height: 355,\n              autosize: true,\n              margin: { l: 10, r: 10, t: 5, b: 5, pad: 0 }\n            }}\n            config={{\n              modeBarButtonsToRemove: [\n                \"toggleSpikelines\",\n                \"zoomIn2d\",\n                \"zoomOut2d\",\n                \"autoScale2d\",\n                \"hoverClosestCartesian\",\n                \"hoverCompareCartesian\",\n                \"hoverClosestPie\"\n              ],\n              displaylogo: false\n            }}\n            useResizeHandler={true}\n            style={{ width: \"100%\", height: \"100%\" }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PieChart;\n","import React, { useState } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport countryData from \"./countries\";\nimport Loading from \"./Loading\";\nimport { connect } from \"react-redux\";\nimport { setCountry } from \"../redux/actions\";\nimport arabicdictionaries from \"./arabicCountries\";\n\nconst reverseDict = countryData[5];\nconst reverseArabic = arabicdictionaries[1];\n\nconst MapChart = ({ loading, data, region, language, setCountry }) => {\n  const handleClick = pointData => {\n    let data = pointData.points[0];\n    let index = data.pointIndex;\n    let location = pointData.points[0].data.locations[index];\n    setCountry(location);\n  };\n\n  let confirmedList = [],\n    countryNames = [];\n  data.map(country => {\n    confirmedList.push(country.confirmed);\n    countryNames.push(\n      language ? reverseDict[country.name] : reverseArabic[country.name]\n    );\n  });\n\n  let scaledData = confirmedList.map(num =>\n    region ? Math.pow(num, 0.3) : num / 50\n  );\n  let plotdata = [\n    {\n      type: \"scattergeo\",\n      mode: \"markers\",\n      locations: countryNames,\n      hoverinfo: \"text, label\",\n      text: confirmedList,\n      marker: {\n        size: scaledData,\n        color: \"rgba(255,0,0,0.75)\",\n        sizeref: 1,\n        line: {\n          color: \"black\"\n        }\n      },\n      name: \"europe data\"\n    }\n  ];\n  if (loading) {\n    return <Loading />;\n  }\n  return (\n    <div>\n      {\" \"}\n      <Plot\n        data={plotdata}\n        layout={\n          region\n            ? {\n                modebar: { bgcolor: \"rgba(255,255,255,0)\" },\n                geo: {\n                  scope: \"World\",\n                  resolution: \"200\",\n                  showland: true,\n                  landcolor: \"#0f1316\",\n                  showframe: true,\n                  bgcolor: \"#0f1316\",\n                  showcountries: true,\n                  showocean: true,\n                  oceancolor: \"#030217\"\n                },\n                border: \"solid\",\n                margin: { l: 0, r: 0, t: 0, b: 0, pad: 0 },\n                plot_bgcolor: \"rgba(0,0,0,0)\",\n                paper_bgcolor: \"rgba(0,0,0,0)\",\n                autosize: true,\n                height: 440\n              }\n            : {\n                modebar: { bgcolor: \"rgba(255,255,255,0)\" },\n                geo: {\n                  scope: \"World\",\n                  resolution: \"200\",\n                  showland: true,\n                  landcolor: \"#0f1316\",\n                  showframe: true,\n                  bgcolor: \"#0f1316\",\n                  showcountries: true,\n                  showocean: true,\n                  oceancolor: \"#030217\",\n                  lonaxis: { range: [-20, 61] },\n                  lataxis: { range: [7, 47] }\n                },\n                border: \"solid\",\n                margin: { l: 5, r: 5, t: 0, b: 0, pad: 0 },\n                plot_bgcolor: \"rgba(0,0,0,0)\",\n                paper_bgcolor: \"rgba(0,0,0,0)\",\n                autosize: true,\n                height: 440\n              } // projection: { type: \"\", scale: 100 }\n        }\n        useResizeHandler={true}\n        style={{ width: \"100%\", height: \"100%\" }}\n        onClick={data => handleClick(data)}\n        config={\n          {\n            modeBarButtonsToRemove: [\n              \"toggleSpikelines\",\n              \"autoScale2d\",\n              \"hoverClosestCartesian\",\n              \"hoverCompareCartesian\",\n              \"select2d\",\n              \"lasso2d\",\n              \"hoverClosestGeo\",\n              \"zoomInGeo\",\n              \"zoomOutGeo\"\n            ],\n            displaylogo: false\n          } // onClick={(data) => handleShow(data)}\n        }\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCountry: country => dispatch(setCountry(country))\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(MapChart);\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport countryData from \"./countries\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport arabicdictionaries from \"./arabicCountries\";\nimport translate from \"./translation\";\n\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst dictionary = countryData[4];\nconst arabicdictionary = arabicdictionaries[0];\n\nconst instance = axios.create({\n  baseURL: \"https://covidapi.info/api/v1/\",\n  loading: true\n});\n\nconst CountryInfo = ({ country, global, language }) => {\n  const [data, setData] = useState(global);\n  const [loading, setLoading] = useState(true);\n  const [X, setX] = useState([]);\n  const [Y1, setY1] = useState([]);\n  const [Y2, setY2] = useState([]);\n  const [Y3, setY3] = useState([]);\n  const [Y4, setY4] = useState([]);\n  const [logarithmic, setLogarithmic] = useState(false);\n  const [selector, setSelector] = useState(\"confirmed\");\n\n  const handleSwitch = () => {\n    setLogarithmic(!logarithmic);\n  };\n\n  const handleOnClick = selected => {\n    setSelector(selected);\n  };\n\n  const fetchData = async country => {\n    try {\n      let response = await instance.get(`country/${country}`);\n      let countryData = response.data.result;\n      setData(countryData);\n      console.log(data[\"2020-03-22\"]);\n      setLoading(true);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(\n    () => {\n      fetchData(country);\n    },\n    [country]\n  );\n\n  let logType = logarithmic ? \"log\" : \"null\";\n\n  if (data && loading) {\n    var Xtemp = [];\n    var Y1temp = [],\n      Y2temp = [],\n      Y3temp = [],\n      Y4temp = [];\n    for (var key in data) {\n      Xtemp.push(key);\n      Y1temp.push(data[key].confirmed);\n      Y2temp.push(data[key].deaths);\n      Y3temp.push(data[key].recovered);\n    }\n    if (Xtemp.length > 1) {\n      setX(Xtemp);\n      setY1(Y1temp);\n      setY2(Y2temp);\n      setY3(Y3temp);\n      for (let i = 0; i < Xtemp.length; i++) {\n        Y4temp.push(Y1temp[i + 1] - Y1temp[i]);\n      }\n      setY4(Y4temp);\n      setLoading(false);\n    }\n  }\n\n  if (!loading) {\n    const trace1 = {\n      x: X,\n      y: Y1,\n      type: \"scatter\",\n      name: \"Confirmed\",\n      mode: \"lines+markers\",\n      line: { color: \"#ff0000\" },\n      marker: { color: \"#ff0000\" }\n    };\n    const trace2 = {\n      x: X,\n      y: Y2,\n      type: \"scatter\",\n      name: \"Deaths\",\n      mode: \"lines+markers\",\n      line: { color: \"#ff0000\" },\n      marker: { color: \"#ff0000\" }\n    };\n    const trace3 = {\n      x: X,\n      y: Y3,\n      type: \"scatter\",\n      name: \"Recovered\",\n      mode: \"lines+markers\",\n      line: { color: \"#ff0000\" },\n      marker: { color: \"#ff0000\" }\n    };\n    const bar = {\n      x: X,\n      y: Y4,\n      type: \"bar\",\n      name: \"New Cases\",\n      line: { color: \"#ff0000\" },\n      marker: { color: \"#ff0000\" }\n    };\n    const plotData = [trace1, trace2, trace3, bar];\n\n    const selectors = [\"confirmed\", \"deaths\", \"recovered\", \"daily increase\"];\n\n    const buttons = selectors.map(type => (\n      <button\n        className={\n          selector === type\n            ? \"btn btn-outline-dark clicked\"\n            : \"btn btn-outline-dark\"\n        }\n        style={{ padding: \"0vh 4.5vh 0vh 4.5vh\" }}\n        onClick={() => handleOnClick(type)}\n      >\n        {\" \"}\n        <font style={{ fontSize: \"1.5vh\" }}>\n          {\" \"}\n          {language ? type : translate[type]}\n        </font>\n      </button>\n    ));\n    let select =\n      selector === \"confirmed\"\n        ? 0\n        : selector === \"deaths\"\n        ? 1\n        : selector === \"recovered\"\n        ? 2\n        : selector === \"daily increase\"\n        ? 3\n        : null;\n    return (\n      <div className=\"padded\">\n        &nbsp;&nbsp; <FontAwesomeIcon icon={faQuestionCircle} size=\"1x\" />{\" \"}\n        &nbsp;&nbsp;\n        {buttons}\n        <div className=\"btn toggler\">\n          <div class=\"custom-control custom-switch \">\n            <input\n              type=\"checkbox\"\n              class=\"custom-control-input\"\n              onClick={() => handleSwitch()}\n              id=\"country-info-switch\"\n            />\n\n            <label\n              class=\"custom-control-label\"\n              for=\"country-info-switch\"\n              style={{ color: \"#e1e5e8\" }}\n            />\n            <font style={{ fontSize: \"1.5vh\", color: \"#e1e5e8\" }}>\n              {\" \"}\n              {language ? \"Logarithmic\" : \"لوغاريتمي\"}\n            </font>\n          </div>\n        </div>\n        <div>\n          <Plot\n            data={[plotData[select]]}\n            layout={{\n              modebar: { bgcolor: \"rgba(255,255,255,0)\" },\n              title:\n                !country && language\n                  ? \"Global\"\n                  : !country && !language\n                  ? \"العالم\"\n                  : country && language\n                  ? `${dictionary[country]}`\n                  : `${arabicdictionary[country]}`,\n              font: { color: \"#e1e5e8\", size: 12 },\n              xaxis: { nticks: 15 },\n              yaxis: { type: logType },\n              margin: { l: 40, r: 20, t: 50, b: 40, pad: 0 },\n              plot_bgcolor: \"#191d20\",\n              paper_bgcolor: \"#191d20\",\n              height: 395,\n              autosize: true\n            }}\n            useResizeHandler={true}\n            style={{ width: \"100%\", height: \"100%\" }}\n            config={{\n              modeBarButtonsToRemove: [\n                \"toggleSpikelines\",\n                \"zoomIn2d\",\n                \"zoomOut2d\",\n                \"autoScale2d\",\n                \"hoverClosestCartesian\",\n                \"hoverCompareCartesian\",\n                \"select2d\",\n                \"lasso2d\"\n              ],\n              displaylogo: false\n            }}\n          />\n        </div>\n      </div>\n    );\n  } else {\n    return <div>Click on a country from the map</div>;\n  }\n};\nconst mapStateToProps = state => {\n  return {\n    country: state.data.country\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(CountryInfo);\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://covidapi.info/api/v1/\",\n  loading: true\n});\n\nconst Footer = ({ language }) => {\n  if (language) {\n    return (\n      <div\n        style={{\n          fontSize: 15,\n          textAlign: \"center\",\n          paddingTop: \"1rem\",\n          color: \"#99aab5\"\n        }}\n      >\n        Copyright ©{\" \"}\n        <a\n          style={{ fontSize: 15, textAlign: \"center\", color: \"#99aab5\" }}\n          href=\"https://github.com/moe9195\"\n        >\n          Mohammad Rahmeh\n        </a>{\" \"}\n        2020. Data obtained from{\" \"}\n        <a\n          style={{ fontSize: 15, textAlign: \"center\", color: \"#99aab5\" }}\n          href=\"https://github.com/backtrackbaba/covid-api\"\n        >\n          CovidAPI.info\n        </a>{\" \"}\n        , which builds upon the dataset of{\" \"}\n        <a\n          style={{ fontSize: 15, textAlign: \"center\", color: \"#99aab5\" }}\n          href=\"https://github.com/CSSEGISandData/COVID-19\"\n        >\n          John Hopkins University.\n        </a>\n        &nbsp;The CSV data was converted to JSON Time Series format by{\" \"}\n        <a\n          style={{ fontSize: 15, textAlign: \"center\", color: \"#99aab5\" }}\n          href=\"https://github.com/pomber/covid19\"\n        >\n          pomber.\n        </a>\n      </div>\n    );\n  } else {\n    return (\n      <div\n        style={{\n          fontSize: 15,\n          textAlign: \"center\",\n          paddingTop: \"1rem\",\n          color: \"#99aab5\",\n          language: \"ar\",\n          direction: \"rtl\"\n        }}\n      >\n        <p>\n          حقوق الطبع والنشر ©\n          <a\n            style={{ fontSize: 15, textAlign: \"center\", color: \"#99aab5\" }}\n            href=\"https://github.com/moe9195\"\n          >\n            محمد رحمه\n          </a>{\" \"}\n          2020. البيانات تم الحصول عليها من\n          <a\n            style={{ fontSize: 15, textAlign: \"center\", color: \"#99aab5\" }}\n            href=\"https://github.com/backtrackbaba/covid-api\"\n          >\n            &nbsp;CovidAPI.info &nbsp;\n          </a>\n          والتي تستند إلى مجموعة بيانات\n          <a\n            style={{ fontSize: 15, textAlign: \"center\", color: \"#99aab5\" }}\n            href=\"https://github.com/CSSEGISandData/COVID-19\"\n          >\n            &nbsp; جامعة جون هوبكنز.&nbsp;\n          </a>\n          &nbsp;تم تحويل بيانات CSV إلى تنسيق JSON Time Series بواسطة\n          <a\n            style={{ fontSize: 15, textAlign: \"center\", color: \"#99aab5\" }}\n            href=\"https://github.com/pomber/covid19\"\n          >\n            &nbsp;pomber\n          </a>\n        </p>\n      </div>\n    );\n  }\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://covidapi.info/api/v1/\",\n  loading: true\n});\n\nconst LastUpdated = ({ language }) => {\n  const [date, setDate] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const fetchDate = async () => {\n    try {\n      let response = await instance.get(`global`);\n      let fetchedData = response.data;\n      if (loading) {\n        setDate(fetchedData.date);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    fetchDate();\n  });\n\n  if (language) {\n    return (\n      <div>\n        <div\n          style={{ opacity: \"0.5\", textAlign: \"center\", paddingLeft: \"1rem\" }}\n        >\n          {\" \"}\n          Last Updated at (MM/DD/YYYY) <br />\n        </div>\n        <div style={{ fontSize: 18, textAlign: \"center\" }}>\n          {\" \"}\n          {loading ? \"\" : `${date}`}\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <div\n          style={{\n            opacity: \"0.5\",\n            textAlign: \"center\",\n            paddingLeft: \"1rem\",\n            language: \"ar\",\n            direction: \"rtl\"\n          }}\n        >\n          {\" \"}\n          التحديث الأخير في&nbsp; (يوم / شهر / سنة)\n          <br />\n        </div>\n        <div style={{ fontSize: 18, textAlign: \"center\" }}>\n          {\" \"}\n          {loading ? \"\" : `${date}`}\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default LastUpdated;\n","import React, { Component } from \"react\";\nimport { Container } from \"./styled-components\";\nimport countryData from \"./countries\";\nimport arabicdictionaries from \"./arabicCountries\";\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\nimport { connect } from \"react-redux\";\n\nimport { changeLanguage } from \"../redux/actions\";\n\nimport Counter from \"./Counter\";\nimport TotalCounter from \"./TotalCounter\";\nimport TimeGraph from \"./TimeGraph\";\nimport PieChart from \"./PieChart\";\nimport MapChart from \"./MapChart\";\nimport CountryInfo from \"./CountryInfo\";\nimport Footer from \"./Footer\";\nimport LastUpdated from \"./LastUpdated\";\n\nconst MENA = countryData[0];\nconst dictionary = countryData[4];\nconst arabicdictionary = arabicdictionaries[0];\n\nconst instance = axios.create({\n  baseURL: \"https://covidapi.info/api/v1/\",\n  loading: true\n});\n\nclass App extends Component {\n  state = {\n    data: null,\n    dataCountries: null,\n    loading: true,\n    region: false\n  };\n\n  fetchData = async countries => {\n    try {\n      let response1 = await instance.get(`global/latest`);\n      let data1 = response1.data;\n      let dict = {};\n      for (let i = 0; i < countries.length; i++) {\n        let response = await instance.get(`country/${countries[i]}`);\n        let countryData = response.data.result;\n        dict[countries[i]] = countryData;\n      }\n      let response2 = await instance.get(`/global/count`);\n      let data2 = response2.data;\n      this.setState({\n        dataCountries: data1,\n        timeData: dict,\n        global: data2,\n        loading: false\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  componentDidMount = async () => {\n    this.fetchData(MENA);\n  };\n\n  sortCountries = (items, region) => {\n    let cleanedConfirmed = [],\n      cleanedRecovered = [],\n      cleanedDeaths = [];\n    if (region) {\n      items.map(country => {\n        let countryName = Object.keys(country)[0];\n        console.log(MENA);\n        if (MENA.indexOf(countryName) !== -1) {\n          let confirmedObj = {\n            name: this.props.language\n              ? dictionary[countryName]\n              : arabicdictionary[countryName],\n            confirmed: country[countryName].confirmed\n          };\n          let recoveredObj = {\n            name: this.props.language\n              ? dictionary[countryName]\n              : arabicdictionary[countryName],\n            recovered: country[countryName].recovered\n          };\n          let deathsObj = {\n            name: this.props.language\n              ? dictionary[countryName]\n              : arabicdictionary[countryName],\n            deaths: country[countryName].deaths\n          };\n          cleanedConfirmed.push(confirmedObj);\n          cleanedRecovered.push(recoveredObj);\n          cleanedDeaths.push(deathsObj);\n        }\n      });\n    } else {\n      items.map(country => {\n        let countryName = Object.keys(country)[0];\n        let confirmedObj = {\n          name: this.props.language\n            ? dictionary[countryName]\n            : arabicdictionary[countryName],\n          confirmed: country[countryName].confirmed\n        };\n        let recoveredObj = {\n          name: this.props.language\n            ? dictionary[countryName]\n            : arabicdictionary[countryName],\n          recovered: country[countryName].recovered\n        };\n        let deathsObj = {\n          name: this.props.language\n            ? dictionary[countryName]\n            : arabicdictionary[countryName],\n          deaths: country[countryName].deaths\n        };\n        cleanedConfirmed.push(confirmedObj);\n        cleanedRecovered.push(recoveredObj);\n        cleanedDeaths.push(deathsObj);\n      });\n    }\n    const confirmed = cleanedConfirmed.sort(\n      (a, b) => b.confirmed - a.confirmed\n    );\n    const recovered = cleanedRecovered.sort(\n      (a, b) => b.recovered - a.recovered\n    );\n    const deaths = cleanedDeaths.sort((a, b) => b.deaths - a.deaths);\n    return [[confirmed], [deaths], [recovered]];\n  };\n\n  render() {\n    if (!this.state.loading) {\n      const sortedData = this.sortCountries(\n        this.state.dataCountries.result,\n        true\n      );\n\n      // Cases country\n      const confirmedData = sortedData[0][0];\n      const deathsData = sortedData[1][0];\n      const recoveredData = sortedData[2][0];\n\n      const sortedDataMENA = this.sortCountries(\n        this.state.dataCountries.result,\n        false\n      );\n\n      const confirmedDataMENA = sortedDataMENA[0][0];\n      const deathsDataMENA = sortedDataMENA[1][0];\n      const recoveredDataMENA = sortedDataMENA[2][0];\n\n      // Total Cases/Deaths/Recovered\n\n      let totalConfirmedMENA = 0,\n        totalDeathsMENA = 0,\n        totalRecoveredMENA = 0;\n      confirmedDataMENA.map(\n        country => (totalConfirmedMENA += country.confirmed)\n      );\n      deathsDataMENA.map(country => (totalDeathsMENA += country.deaths));\n      recoveredDataMENA.map(\n        country => (totalRecoveredMENA += country.recovered)\n      );\n\n      let totalConfirmed = 0,\n        totalDeaths = 0,\n        totalRecovered = 0;\n      confirmedData.map(country => (totalConfirmed += country.confirmed));\n      deathsData.map(country => (totalDeaths += country.deaths));\n      recoveredData.map(country => (totalRecovered += country.recovered));\n\n      return (\n        <Container>\n          {/* content area start */}\n          <Container className=\"container-fluid pr-1 pl-1 pt-1 pb-1\">\n            {/* header */}\n            <Container className=\"row\">\n              <Container className=\"col-md-4 col-lg-12 is-light-text mb-2 small-padding\">\n                <Container\n                  className=\" card is-card-dark \"\n                  style={{ flexDirection: \"row\" }}\n                >\n                  <div className=\"dashboard-title\">\n                    {\" \"}\n                    Coronavirus COVID-19 Global and Arab World Cases Dashboard\n                  </div>\n\n                  <div className=\" change-region\">\n                    <div class=\"custom-control custom-switch\">\n                      <input\n                        type=\"checkbox\"\n                        class=\"custom-control-input\"\n                        onClick={() =>\n                          this.props.changeLanguage(!this.props.language)\n                        }\n                        id=\"languageswitch\"\n                      />{\" \"}\n                      {this.props.language ? \"اللغة العربية\" : \"English\"}\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      <label\n                        class=\"custom-control-label\"\n                        for=\"languageswitch\"\n                      />\n                    </div>\n                    <div class=\"custom-control custom-switch\">\n                      <input\n                        type=\"checkbox\"\n                        class=\"custom-control-input\"\n                        onClick={() =>\n                          this.setState({ region: !this.state.region })\n                        }\n                        id=\"regionswitch\"\n                      />{\" \"}\n                      {this.state.region && this.props.language\n                        ? \"show local data\"\n                        : this.state.region && !this.props.language\n                        ? \"أظهر الدول العربية\"\n                        : !this.state.region && !this.props.language\n                        ? \"أظهر جميع الدول \"\n                        : \" show global data\"}\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      <label class=\"custom-control-label\" for=\"regionswitch\" />\n                    </div>\n                  </div>\n                </Container>\n              </Container>\n            </Container>\n            {/* row 1  */}\n            <Container className=\"row\">\n              {/* counter list  */}\n              <Container className=\"col-lg-2 col-sm-6 is-light-text mb-3 small-padding\">\n                <Container className=\"card grid-card is-card-dark\">\n                  <TotalCounter\n                    data={\n                      this.state.region\n                        ? [\n                            totalConfirmedMENA,\n                            totalDeathsMENA,\n                            totalRecoveredMENA\n                          ]\n                        : [totalConfirmed, totalDeaths, totalRecovered]\n                    }\n                    language={this.props.language}\n                  />\n                </Container>\n              </Container>\n              {/* counter  */}\n              <Container className=\"col-lg-2 col-sm-6 is-light-text mb-3 small-padding\">\n                <Container className=\"card grid-card is-card-dark\">\n                  <Counter\n                    data={\n                      this.state.region\n                        ? [confirmedDataMENA, deathsDataMENA, recoveredDataMENA]\n                        : [confirmedData, deathsData, recoveredData]\n                    }\n                    loading={this.state.loading}\n                    language={this.props.language}\n                  />\n                </Container>\n              </Container>\n\n              {/* timegraph  */}\n              <Container className=\"col-lg-5 col-sm-6 is-light-text mb-3 small-padding\">\n                <Container className=\"card grid-card is-card-dark\">\n                  <TimeGraph\n                    data={this.state.timeData}\n                    loading={this.state.loading}\n                    language={this.props.language}\n                  />\n                </Container>\n              </Container>\n              {/* pie chart  */}\n              <Container className=\"col-lg-3 col-sm-6 is-light-text mb-3 small-padding\">\n                <Container className=\"card grid-card is-card-dark\">\n                  <PieChart\n                    data={[confirmedData, deathsData, recoveredData]}\n                    loading={this.state.loading}\n                    language={this.props.language}\n                  />\n                </Container>\n              </Container>\n            </Container>\n\n            {/* row 2  */}\n\n            <Container className=\"row\">\n              <Container className=\"col-md-4 col-lg-6 is-light-text mb-3 small-padding \">\n                <Container className=\"card is-card-dark map-card\">\n                  <MapChart\n                    data={this.state.region ? confirmedDataMENA : confirmedData}\n                    loading={this.state.loading}\n                    region={this.state.region}\n                    language={this.props.language}\n                  />\n                </Container>\n              </Container>\n\n              <Container className=\"col-md-4 col-lg-6 is-light-text mb-3 small-padding\">\n                <Container className=\"card is-card-dark info-card\">\n                  <CountryInfo\n                    global={this.state.global.result}\n                    language={this.props.language}\n                  />\n                </Container>\n              </Container>\n            </Container>\n\n            {/* footer */}\n            <Container className=\"row\">\n              <Container className=\"col-md-4 col-lg-2 is-light-text mb-2 small-padding\">\n                <Container className=\"card footer-card is-card-dark\">\n                  <LastUpdated language={this.props.language} />\n                </Container>\n              </Container>\n\n              <Container className=\"col-md-4 col-lg-10 is-light-text mb-2 small-padding\">\n                <Container className=\"card is-card-dark footer-card\">\n                  <Footer language={this.props.language} />\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n        </Container>\n      );\n    } else {\n      return (\n        <div>\n          {\" \"}\n          <Loading />\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.data.language\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeLanguage: language => dispatch(changeLanguage(language))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  SET_DATA,\n  LOADING,\n  SET_COUNTRY,\n  CHANGE_LANGUAGE\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n  countryData: null,\n  loading: true,\n  country: null,\n  language: true\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      return {\n        ...state,\n        data: action.payload\n      };\n    case LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case SET_COUNTRY:\n      return {\n        ...state,\n        country: action.payload\n      };\n    case CHANGE_LANGUAGE:\n      return {\n        ...state,\n        language: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport reducer from \"./data\";\n\nconst rootReducer = combineReducers({\n  data: reducer\n});\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\n// Data actions\n\nimport rootReducer from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux\";\n\nimport { Provider } from \"react-redux\";\n\nimport \"react-dropdown/style.css\";\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}