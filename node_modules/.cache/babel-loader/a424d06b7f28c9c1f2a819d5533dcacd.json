{"ast":null,"code":"import _regeneratorRuntime from \"/home/moe/Development/corona/covid19-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/moe/Development/corona/covid19-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/moe/Development/corona/covid19-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/moe/Development/corona/covid19-dashboard/src/components/CountryInfo.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Loading from \"./Loading\";\nimport Plot from \"react-plotly.js\";\nimport countryData from \"./countries\";\nimport { connect } from \"react-redux\";\nimport { setData } from \"../redux/actions\";\nvar instance = axios.create({\n  baseURL: \"https://covidapi.info/api/v1/\",\n  loading: true\n});\n\nvar CountryInfo = function CountryInfo(_ref) {\n  var country = _ref.country;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      X = _useState6[0],\n      setX = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      Y1 = _useState8[0],\n      setY1 = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      Y2 = _useState10[0],\n      setY2 = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      Y3 = _useState12[0],\n      setY3 = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      Y4 = _useState14[0],\n      setY4 = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      logarithmic = _useState16[0],\n      setLogarithmic = _useState16[1];\n\n  var handleSwitch = function handleSwitch() {\n    setLogarithmic(!logarithmic);\n  };\n\n  var fetchData =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(country) {\n      var response, _countryData;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return instance.get(\"country/\".concat(country));\n\n            case 3:\n              response = _context.sent;\n              _countryData = response.data.result;\n\n              if (loading) {\n                setData(_countryData);\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 8]]);\n    }));\n\n    return function fetchData(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchData(country);\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, props.country, \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    country: state.data.country\n  };\n};\n\nexport default connect(mapStateToProps, null)(CountryInfo);","map":{"version":3,"sources":["/home/moe/Development/corona/covid19-dashboard/src/components/CountryInfo.js"],"names":["React","useState","useEffect","Loading","Plot","countryData","connect","setData","instance","axios","create","baseURL","loading","CountryInfo","country","data","setLoading","X","setX","Y1","setY1","Y2","setY2","Y3","setY3","Y4","setY4","logarithmic","setLogarithmic","handleSwitch","fetchData","get","response","result","console","error","props","mapStateToProps","state"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,IAAMC,QAAQ,GAAGC,KAAK,CAACC,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE,+BADmB;AAE5BC,EAAAA,OAAO,EAAE;AAFmB,CAAb,CAAjB;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,kBACXb,QAAQ,CAAC,IAAD,CADG;AAAA;AAAA,MAC5Bc,IAD4B;AAAA,MACtBR,OADsB;;AAAA,mBAELN,QAAQ,CAAC,IAAD,CAFH;AAAA;AAAA,MAE5BW,OAF4B;AAAA,MAEnBI,UAFmB;;AAAA,mBAGjBf,QAAQ,CAAC,EAAD,CAHS;AAAA;AAAA,MAG5BgB,CAH4B;AAAA,MAGzBC,IAHyB;;AAAA,mBAIfjB,QAAQ,CAAC,EAAD,CAJO;AAAA;AAAA,MAI5BkB,EAJ4B;AAAA,MAIxBC,KAJwB;;AAAA,mBAKfnB,QAAQ,CAAC,EAAD,CALO;AAAA;AAAA,MAK5BoB,EAL4B;AAAA,MAKxBC,KALwB;;AAAA,oBAMfrB,QAAQ,CAAC,EAAD,CANO;AAAA;AAAA,MAM5BsB,EAN4B;AAAA,MAMxBC,KANwB;;AAAA,oBAOfvB,QAAQ,CAAC,EAAD,CAPO;AAAA;AAAA,MAO5BwB,EAP4B;AAAA,MAOxBC,KAPwB;;AAAA,oBAQGzB,QAAQ,CAAC,KAAD,CARX;AAAA;AAAA,MAQ5B0B,WAR4B;AAAA,MAQfC,cARe;;AAUnC,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBD,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACD,GAFD;;AAIA,MAAMG,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAOhB,OAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEON,QAAQ,CAACuB,GAAT,mBAAwBjB,OAAxB,EAFP;;AAAA;AAEVkB,cAAAA,QAFU;AAGV3B,cAAAA,YAHU,GAGI2B,QAAQ,CAACjB,IAAT,CAAckB,MAHlB;;AAId,kBAAIrB,OAAJ,EAAa;AACXL,gBAAAA,OAAO,CAACF,YAAD,CAAP;AACD;;AANa;AAAA;;AAAA;AAAA;AAAA;AAQd6B,cAAAA,OAAO,CAACC,KAAR;;AARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATL,SAAS;AAAA;AAAA;AAAA,KAAf;;AAWA5B,EAAAA,SAAS,CAAC,YAAM;AACd4B,IAAAA,SAAS,CAAChB,OAAD,CAAT;AACD,GAFQ,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGsB,KAAK,CAACtB,OADT,OACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlB,CADF;AAKD,CAlCD;;AAoCA,IAAMuB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLxB,IAAAA,OAAO,EAAEwB,KAAK,CAACvB,IAAN,CAAWD;AADf,GAAP;AAGD,CAJD;;AAMA,eAAeR,OAAO,CACpB+B,eADoB,EAEpB,IAFoB,CAAP,CAGbxB,WAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Loading from \"./Loading\";\nimport Plot from \"react-plotly.js\";\nimport countryData from \"./countries\";\nimport { connect } from \"react-redux\";\nimport { setData } from \"../redux/actions\";\n\nconst instance = axios.create({\n  baseURL: \"https://covidapi.info/api/v1/\",\n  loading: true,\n});\n\nconst CountryInfo = ({ country }) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [X, setX] = useState([]);\n  const [Y1, setY1] = useState([]);\n  const [Y2, setY2] = useState([]);\n  const [Y3, setY3] = useState([]);\n  const [Y4, setY4] = useState([]);\n  const [logarithmic, setLogarithmic] = useState(false);\n\n  const handleSwitch = () => {\n    setLogarithmic(!logarithmic);\n  };\n\n  const fetchData = async (country) => {\n    try {\n      let response = await instance.get(`country/${country}`);\n      let countryData = response.data.result;\n      if (loading) {\n        setData(countryData);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    fetchData(country);\n  });\n\n  return (\n    <div>\n      {props.country} <br />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    country: state.data.country,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(CountryInfo);\n"]},"metadata":{},"sourceType":"module"}