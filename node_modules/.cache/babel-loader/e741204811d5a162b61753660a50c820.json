{"ast":null,"code":"import _classCallCheck from \"/home/moe/Development/corona/online-retail-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/moe/Development/corona/online-retail-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/moe/Development/corona/online-retail-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/moe/Development/corona/online-retail-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/moe/Development/corona/online-retail-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/moe/Development/corona/online-retail-dashboard/src/components/Counter.js\";\nimport React, { Component } from \"react\";\nimport countryData from \"./countries\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Loading from \"./Loading\";\nimport { connect } from \"react-redux\";\nimport { setData as _setData } from \"../redux/actions\";\nvar allCountries = countryData[3];\nvar dictionary = countryData[4];\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: null,\n      dataCountries: null,\n      region: false,\n      loading: true\n    };\n\n    _this.changeRegion = function () {\n      _this.setState({\n        region: !_this.state.region\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.loading !== this.props.loading) {\n        this.setState({\n          loading: !this.props.loading\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var confirmedRows = React.createElement(React.Fragment, null);\n      var deadRows = React.createElement(React.Fragment, null);\n      var recoveredRows = React.createElement(React.Fragment, null);\n      var confirmedData = this.props.data[0];\n      var deathsData = this.props.data[1];\n      var recoveredData = this.props.data[2];\n      confirmedRows = confirmedData.map(function (country) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"\\xA0\\xA0\\xA0\", React.createElement(\"font\", {\n          style: {\n            color: \"red\",\n            fontSize: \"17px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, country.confirmed), React.createElement(\"font\", {\n          style: {\n            fontSize: \"15px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"\\xA0\\xA0\", country.name)));\n      });\n      deadRows = deathsData.map(function (country) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"\\xA0\\xA0\\xA0\", React.createElement(\"font\", {\n          style: {\n            color: \"red\",\n            fontSize: \"17px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, country.deaths), React.createElement(\"font\", {\n          style: {\n            fontSize: \"15px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"\\xA0\\xA0\", country.name)));\n      });\n      recoveredRows = recoveredData.map(function (country) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"\\xA0\\xA0\\xA0\", React.createElement(\"font\", {\n          style: {\n            color: \"red\",\n            fontSize: \"17px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, country.recovered), React.createElement(\"font\", {\n          style: {\n            fontSize: \"15px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"\\xA0\\xA0\", country.name)));\n      });\n      recoveredData.map(function (country) {\n        return console.log(country);\n      });\n\n      if (this.props.loading) {\n        return React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container counter-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: \"confirmed\",\n        id: \"counter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        eventKey: \"confirmed\",\n        title: \"Confirmed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        class: \"table-dark \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.props.loading ? \"\" : confirmedRows))), React.createElement(Tab, {\n        eventKey: \"deaths\",\n        title: \"Deaths\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        class: \"table-dark \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \" \", this.props.loading ? \"\" : deadRows))), React.createElement(Tab, {\n        eventKey: \"recovered\",\n        title: \"Recovered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        class: \"table-dark \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \" \", this.props.loading ? \"\" : recoveredRows)))));\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setData: function setData(data) {\n      return dispatch(_setData(data));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Counter);","map":{"version":3,"sources":["/home/moe/Development/corona/online-retail-dashboard/src/components/Counter.js"],"names":["React","Component","countryData","Tab","Tabs","Loading","connect","setData","allCountries","dictionary","Counter","state","data","dataCountries","region","loading","changeRegion","setState","prevProps","props","confirmedRows","deadRows","recoveredRows","confirmedData","deathsData","recoveredData","map","country","color","fontSize","confirmed","name","deaths","recovered","console","log","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport countryData from \"./countries\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Loading from \"./Loading\";\nimport { connect } from \"react-redux\";\nimport { setData } from \"../redux/actions\";\n\nconst allCountries = countryData[3];\nconst dictionary = countryData[4];\n\nclass Counter extends Component {\n  state = {\n    data: null,\n    dataCountries: null,\n    region: false,\n    loading: true,\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.loading !== this.props.loading) {\n      this.setState({ loading: !this.props.loading });\n    }\n  }\n\n  changeRegion = () => {\n    this.setState({ region: !this.state.region });\n  };\n\n  render() {\n    let confirmedRows = <></>;\n    let deadRows = <></>;\n    let recoveredRows = <></>;\n\n    const confirmedData = this.props.data[0];\n    const deathsData = this.props.data[1];\n    const recoveredData = this.props.data[2];\n\n    confirmedRows = confirmedData.map((country) => (\n      <tr>\n        <td>\n          &nbsp;&nbsp;&nbsp;\n          <font style={{ color: \"red\", fontSize: \"17px\" }}>\n            {country.confirmed}\n          </font>\n          <font style={{ fontSize: \"15px\" }}>\n            &nbsp;&nbsp;\n            {country.name}\n          </font>\n        </td>\n      </tr>\n    ));\n    deadRows = deathsData.map((country) => (\n      <tr>\n        <td>\n          &nbsp;&nbsp;&nbsp;\n          <font style={{ color: \"red\", fontSize: \"17px\" }}>\n            {country.deaths}\n          </font>\n          <font style={{ fontSize: \"15px\" }}>\n            &nbsp;&nbsp;\n            {country.name}\n          </font>\n        </td>\n      </tr>\n    ));\n    recoveredRows = recoveredData.map((country) => (\n      <tr>\n        <td>\n          &nbsp;&nbsp;&nbsp;\n          <font style={{ color: \"red\", fontSize: \"17px\" }}>\n            {country.recovered}\n          </font>\n          <font style={{ fontSize: \"15px\" }}>\n            &nbsp;&nbsp;\n            {country.name}\n          </font>\n        </td>\n      </tr>\n    ));\n\n    recoveredData.map((country) => console.log(country));\n\n    if (this.props.loading) {\n      return <Loading />;\n    }\n    return (\n      <div className=\"container counter-nav\">\n        <Tabs defaultActiveKey=\"confirmed\" id=\"counter\">\n          <Tab eventKey=\"confirmed\" title=\"Confirmed\">\n            <table class=\"table-dark \">\n              <tbody>{this.props.loading ? \"\" : confirmedRows}</tbody>\n            </table>\n          </Tab>\n          <Tab eventKey=\"deaths\" title=\"Deaths\">\n            <table class=\"table-dark \">\n              <tbody> {this.props.loading ? \"\" : deadRows}</tbody>\n            </table>\n          </Tab>\n          <Tab eventKey=\"recovered\" title=\"Recovered\">\n            <table class=\"table-dark \">\n              <tbody> {this.props.loading ? \"\" : recoveredRows}</tbody>\n            </table>\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setData: (data) => dispatch(setData(data)),\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Counter);\n"]},"metadata":{},"sourceType":"module"}