{"ast":null,"code":"import _regeneratorRuntime from \"/home/moe/Development/corona/covid19-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/moe/Development/corona/covid19-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/moe/Development/corona/covid19-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/moe/Development/corona/covid19-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/moe/Development/corona/covid19-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/moe/Development/corona/covid19-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/moe/Development/corona/covid19-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/moe/Development/corona/covid19-dashboard/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport { Container } from \"./styled-components\";\nimport countryData from \"./countries\";\nimport arabicdictionaries from \"./arabicCountries\";\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\nimport { connect } from \"react-redux\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { changeLanguage as _changeLanguage } from \"../redux/actions\";\nimport Counter from \"./Counter\";\nimport TotalCounter from \"./TotalCounter\";\nimport TimeGraph from \"./TimeGraph\";\nimport PieChart from \"./PieChart\";\nimport MapChart from \"./MapChart\";\nimport CountryInfo from \"./CountryInfo\";\nimport Footer from \"./Footer\";\nimport LastUpdated from \"./LastUpdated\";\nvar MENA = countryData[0];\nvar dictionary = countryData[4];\nvar arabicdictionary = arabicdictionaries[0];\nvar instance = axios.create({\n  baseURL: \"https://covidapi.info/api/v1/\",\n  loading: true\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: null,\n      dataCountries: null,\n      loading: true,\n      region: false\n    };\n\n    _this.fetchData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(countries) {\n        var response1, data1, dict, i, response, _countryData, response2, data2;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return instance.get(\"global/latest\");\n\n              case 3:\n                response1 = _context.sent;\n                data1 = response1.data;\n                dict = {};\n                i = 0;\n\n              case 7:\n                if (!(i < countries.length)) {\n                  _context.next = 16;\n                  break;\n                }\n\n                _context.next = 10;\n                return instance.get(\"country/\".concat(countries[i]));\n\n              case 10:\n                response = _context.sent;\n                _countryData = response.data.result;\n                dict[countries[i]] = _countryData;\n\n              case 13:\n                i++;\n                _context.next = 7;\n                break;\n\n              case 16:\n                _context.next = 18;\n                return instance.get(\"/global/count\");\n\n              case 18:\n                response2 = _context.sent;\n                data2 = response2.data;\n\n                _this.setState({\n                  dataCountries: data1,\n                  timeData: dict,\n                  global: data2,\n                  loading: false\n                });\n\n                _context.next = 26;\n                break;\n\n              case 23:\n                _context.prev = 23;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 23]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.fetchData(MENA);\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    _this.sortCountries = function (items, region) {\n      var cleanedConfirmed = [],\n          cleanedRecovered = [],\n          cleanedDeaths = [];\n\n      if (region) {\n        items.map(function (country) {\n          var countryName = Object.keys(country)[0];\n          console.log(MENA);\n\n          if (MENA.indexOf(countryName) !== -1) {\n            var confirmedObj = {\n              name: _this.props.language ? dictionary[countryName] : arabicdictionary[countryName],\n              confirmed: country[countryName].confirmed\n            };\n            var recoveredObj = {\n              name: _this.props.language ? dictionary[countryName] : arabicdictionary[countryName],\n              recovered: country[countryName].recovered\n            };\n            var deathsObj = {\n              name: _this.props.language ? dictionary[countryName] : arabicdictionary[countryName],\n              deaths: country[countryName].deaths\n            };\n            cleanedConfirmed.push(confirmedObj);\n            cleanedRecovered.push(recoveredObj);\n            cleanedDeaths.push(deathsObj);\n          }\n        });\n      } else {\n        items.map(function (country) {\n          var countryName = Object.keys(country)[0];\n          var confirmedObj = {\n            name: _this.props.language ? dictionary[countryName] : arabicdictionary[countryName],\n            confirmed: country[countryName].confirmed\n          };\n          var recoveredObj = {\n            name: _this.props.language ? dictionary[countryName] : arabicdictionary[countryName],\n            recovered: country[countryName].recovered\n          };\n          var deathsObj = {\n            name: _this.props.language ? dictionary[countryName] : arabicdictionary[countryName],\n            deaths: country[countryName].deaths\n          };\n          cleanedConfirmed.push(confirmedObj);\n          cleanedRecovered.push(recoveredObj);\n          cleanedDeaths.push(deathsObj);\n        });\n      }\n\n      var confirmed = cleanedConfirmed.sort(function (a, b) {\n        return b.confirmed - a.confirmed;\n      });\n      var recovered = cleanedRecovered.sort(function (a, b) {\n        return b.recovered - a.recovered;\n      });\n      var deaths = cleanedDeaths.sort(function (a, b) {\n        return b.deaths - a.deaths;\n      });\n      return [[confirmed], [deaths], [recovered]];\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.loading) {\n        var sortedData = this.sortCountries(this.state.dataCountries.result, true); // Cases country\n\n        var confirmedData = sortedData[0][0];\n        var deathsData = sortedData[1][0];\n        var recoveredData = sortedData[2][0];\n        var sortedDataMENA = this.sortCountries(this.state.dataCountries.result, false);\n        var confirmedDataMENA = sortedDataMENA[0][0];\n        var deathsDataMENA = sortedDataMENA[1][0];\n        var recoveredDataMENA = sortedDataMENA[2][0]; // Total Cases/Deaths/Recovered\n\n        var totalConfirmedMENA = 0,\n            totalDeathsMENA = 0,\n            totalRecoveredMENA = 0;\n        confirmedDataMENA.map(function (country) {\n          return totalConfirmedMENA += country.confirmed;\n        });\n        deathsDataMENA.map(function (country) {\n          return totalDeathsMENA += country.deaths;\n        });\n        recoveredDataMENA.map(function (country) {\n          return totalRecoveredMENA += country.recovered;\n        });\n        var totalConfirmed = 0,\n            totalDeaths = 0,\n            totalRecovered = 0;\n        confirmedData.map(function (country) {\n          return totalConfirmed += country.confirmed;\n        });\n        deathsData.map(function (country) {\n          return totalDeaths += country.deaths;\n        });\n        recoveredData.map(function (country) {\n          return totalRecovered += country.recovered;\n        });\n        return React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(Container, {\n          className: \"container-fluid pr-1 pl-1 pt-1 pb-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(Container, {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, React.createElement(Container, {\n          className: \"col-md-4 col-lg-12 is-light-text mb-2 small-padding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, React.createElement(Container, {\n          className: \" card is-card-dark \",\n          style: {\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"dashboard-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, \" \", \"Coronavirus COVID-19 Global and Arab World Cases Dashboard\"), React.createElement(\"div\", {\n          className: \" change-region\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(Dropdown, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, React.createElement(Dropdown.Toggle, {\n          variant: \"outline-dark\",\n          id: \"dropdown-basic\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, !this.state.language ? \"Region\" : \"المنطقة\"), React.createElement(Dropdown.Menu, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, React.createElement(Dropdown.Item, {\n          onClick: function onClick() {\n            return _this2.setState({\n              region: true\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, !this.state.language ? \"Global\" : \"جميع الدول\"), React.createElement(Dropdown.Item, {\n          onClick: function onClick() {\n            return _this2.setState({\n              region: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, !this.state.language ? \"Arab World\" : \"الدول العربية\"))), React.createElement(Dropdown, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, \" \", React.createElement(Dropdown.Toggle, {\n          variant: \"outline-dark\",\n          id: \"dropdown-basic\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, !this.state.language ? \"Language\" : \"اللغة\"), React.createElement(Dropdown.Menu, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, React.createElement(Dropdown.Item, {\n          onClick: function onClick() {\n            return _this2.props.changeLanguage(false);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"region-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, !this.state.language ? \"اللغة العربية\" : \"English\")), React.createElement(Dropdown.Item, {\n          onClick: function onClick() {\n            return _this2.props.changeLanguage(true);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, !this.state.language ? \"English\" : \"اللغة الإنجليزية\"))))))), React.createElement(Container, {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }, React.createElement(Container, {\n          className: \"col-lg-2 col-sm-6 is-light-text mb-3 small-padding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, React.createElement(Container, {\n          className: \"card grid-card is-card-dark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, React.createElement(TotalCounter, {\n          data: this.state.region ? [totalConfirmedMENA, totalDeathsMENA, totalRecoveredMENA] : [totalConfirmed, totalDeaths, totalRecovered],\n          language: this.props.language,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }))), React.createElement(Container, {\n          className: \"col-lg-2 col-sm-6 is-light-text mb-3 small-padding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }, React.createElement(Container, {\n          className: \"card grid-card is-card-dark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        }, React.createElement(Counter, {\n          data: this.state.region ? [confirmedDataMENA, deathsDataMENA, recoveredDataMENA] : [confirmedData, deathsData, recoveredData],\n          loading: this.state.loading,\n          language: this.props.language,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }))), React.createElement(Container, {\n          className: \"col-lg-5 col-sm-6 is-light-text mb-3 small-padding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }, React.createElement(Container, {\n          className: \"card grid-card is-card-dark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }, React.createElement(TimeGraph, {\n          data: this.state.timeData,\n          loading: this.state.loading,\n          language: this.props.language,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }))), React.createElement(Container, {\n          className: \"col-lg-3 col-sm-6 is-light-text mb-3 small-padding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        }, React.createElement(Container, {\n          className: \"card grid-card is-card-dark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, React.createElement(PieChart, {\n          data: [confirmedData, deathsData, recoveredData],\n          loading: this.state.loading,\n          language: this.props.language,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        })))), React.createElement(Container, {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        }, React.createElement(Container, {\n          className: \"col-md-4 col-lg-6 is-light-text mb-3 small-padding \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }, React.createElement(Container, {\n          className: \"card is-card-dark map-card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }, React.createElement(MapChart, {\n          data: this.state.region ? confirmedDataMENA : confirmedData,\n          loading: this.state.loading,\n          region: this.state.region,\n          language: this.props.language,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }))), React.createElement(Container, {\n          className: \"col-md-4 col-lg-6 is-light-text mb-3 small-padding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }, React.createElement(Container, {\n          className: \"card is-card-dark info-card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          },\n          __self: this\n        }, React.createElement(CountryInfo, {\n          global: this.state.global.result,\n          language: this.props.language,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        })))), React.createElement(Container, {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }, React.createElement(Container, {\n          className: \"col-md-4 col-lg-2 is-light-text mb-2 small-padding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }, React.createElement(Container, {\n          className: \"card footer-card is-card-dark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326\n          },\n          __self: this\n        }, React.createElement(LastUpdated, {\n          language: this.props.language,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          },\n          __self: this\n        }))), React.createElement(Container, {\n          className: \"col-md-4 col-lg-10 is-light-text mb-2 small-padding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        }, React.createElement(Container, {\n          className: \"card is-card-dark footer-card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, React.createElement(Footer, {\n          language: this.props.language,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        }))))));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        }, \" \", React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    language: state.data.language\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changeLanguage: function changeLanguage(language) {\n      return dispatch(_changeLanguage(language));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/moe/Development/corona/covid19-dashboard/src/components/App.js"],"names":["React","Component","Container","countryData","arabicdictionaries","axios","Loading","connect","Dropdown","changeLanguage","Counter","TotalCounter","TimeGraph","PieChart","MapChart","CountryInfo","Footer","LastUpdated","MENA","dictionary","arabicdictionary","instance","create","baseURL","loading","App","state","data","dataCountries","region","fetchData","countries","get","response1","data1","dict","i","length","response","result","response2","data2","setState","timeData","global","console","error","componentDidMount","sortCountries","items","cleanedConfirmed","cleanedRecovered","cleanedDeaths","map","country","countryName","Object","keys","log","indexOf","confirmedObj","name","props","language","confirmed","recoveredObj","recovered","deathsObj","deaths","push","sort","a","b","sortedData","confirmedData","deathsData","recoveredData","sortedDataMENA","confirmedDataMENA","deathsDataMENA","recoveredDataMENA","totalConfirmedMENA","totalDeathsMENA","totalRecoveredMENA","totalConfirmed","totalDeaths","totalRecovered","flexDirection","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Container } from \"./styled-components\";\nimport countryData from \"./countries\";\nimport arabicdictionaries from \"./arabicCountries\";\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\nimport { connect } from \"react-redux\";\nimport { Dropdown } from \"react-bootstrap\";\n\nimport { changeLanguage } from \"../redux/actions\";\n\nimport Counter from \"./Counter\";\nimport TotalCounter from \"./TotalCounter\";\nimport TimeGraph from \"./TimeGraph\";\nimport PieChart from \"./PieChart\";\nimport MapChart from \"./MapChart\";\nimport CountryInfo from \"./CountryInfo\";\nimport Footer from \"./Footer\";\nimport LastUpdated from \"./LastUpdated\";\n\nconst MENA = countryData[0];\nconst dictionary = countryData[4];\nconst arabicdictionary = arabicdictionaries[0];\n\nconst instance = axios.create({\n  baseURL: \"https://covidapi.info/api/v1/\",\n  loading: true\n});\n\nclass App extends Component {\n  state = {\n    data: null,\n    dataCountries: null,\n    loading: true,\n    region: false\n  };\n\n  fetchData = async countries => {\n    try {\n      let response1 = await instance.get(`global/latest`);\n      let data1 = response1.data;\n      let dict = {};\n      for (let i = 0; i < countries.length; i++) {\n        let response = await instance.get(`country/${countries[i]}`);\n        let countryData = response.data.result;\n        dict[countries[i]] = countryData;\n      }\n      let response2 = await instance.get(`/global/count`);\n      let data2 = response2.data;\n      this.setState({\n        dataCountries: data1,\n        timeData: dict,\n        global: data2,\n        loading: false\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  componentDidMount = async () => {\n    this.fetchData(MENA);\n  };\n\n  sortCountries = (items, region) => {\n    let cleanedConfirmed = [],\n      cleanedRecovered = [],\n      cleanedDeaths = [];\n    if (region) {\n      items.map(country => {\n        let countryName = Object.keys(country)[0];\n        console.log(MENA);\n        if (MENA.indexOf(countryName) !== -1) {\n          let confirmedObj = {\n            name: this.props.language\n              ? dictionary[countryName]\n              : arabicdictionary[countryName],\n            confirmed: country[countryName].confirmed\n          };\n          let recoveredObj = {\n            name: this.props.language\n              ? dictionary[countryName]\n              : arabicdictionary[countryName],\n            recovered: country[countryName].recovered\n          };\n          let deathsObj = {\n            name: this.props.language\n              ? dictionary[countryName]\n              : arabicdictionary[countryName],\n            deaths: country[countryName].deaths\n          };\n          cleanedConfirmed.push(confirmedObj);\n          cleanedRecovered.push(recoveredObj);\n          cleanedDeaths.push(deathsObj);\n        }\n      });\n    } else {\n      items.map(country => {\n        let countryName = Object.keys(country)[0];\n        let confirmedObj = {\n          name: this.props.language\n            ? dictionary[countryName]\n            : arabicdictionary[countryName],\n          confirmed: country[countryName].confirmed\n        };\n        let recoveredObj = {\n          name: this.props.language\n            ? dictionary[countryName]\n            : arabicdictionary[countryName],\n          recovered: country[countryName].recovered\n        };\n        let deathsObj = {\n          name: this.props.language\n            ? dictionary[countryName]\n            : arabicdictionary[countryName],\n          deaths: country[countryName].deaths\n        };\n        cleanedConfirmed.push(confirmedObj);\n        cleanedRecovered.push(recoveredObj);\n        cleanedDeaths.push(deathsObj);\n      });\n    }\n    const confirmed = cleanedConfirmed.sort(\n      (a, b) => b.confirmed - a.confirmed\n    );\n    const recovered = cleanedRecovered.sort(\n      (a, b) => b.recovered - a.recovered\n    );\n    const deaths = cleanedDeaths.sort((a, b) => b.deaths - a.deaths);\n    return [[confirmed], [deaths], [recovered]];\n  };\n\n  render() {\n    if (!this.state.loading) {\n      const sortedData = this.sortCountries(\n        this.state.dataCountries.result,\n        true\n      );\n\n      // Cases country\n      const confirmedData = sortedData[0][0];\n      const deathsData = sortedData[1][0];\n      const recoveredData = sortedData[2][0];\n\n      const sortedDataMENA = this.sortCountries(\n        this.state.dataCountries.result,\n        false\n      );\n\n      const confirmedDataMENA = sortedDataMENA[0][0];\n      const deathsDataMENA = sortedDataMENA[1][0];\n      const recoveredDataMENA = sortedDataMENA[2][0];\n\n      // Total Cases/Deaths/Recovered\n\n      let totalConfirmedMENA = 0,\n        totalDeathsMENA = 0,\n        totalRecoveredMENA = 0;\n      confirmedDataMENA.map(\n        country => (totalConfirmedMENA += country.confirmed)\n      );\n      deathsDataMENA.map(country => (totalDeathsMENA += country.deaths));\n      recoveredDataMENA.map(\n        country => (totalRecoveredMENA += country.recovered)\n      );\n\n      let totalConfirmed = 0,\n        totalDeaths = 0,\n        totalRecovered = 0;\n      confirmedData.map(country => (totalConfirmed += country.confirmed));\n      deathsData.map(country => (totalDeaths += country.deaths));\n      recoveredData.map(country => (totalRecovered += country.recovered));\n\n      return (\n        <Container>\n          {/* content area start */}\n          <Container className=\"container-fluid pr-1 pl-1 pt-1 pb-1\">\n            {/* header */}\n            <Container className=\"row\">\n              <Container className=\"col-md-4 col-lg-12 is-light-text mb-2 small-padding\">\n                <Container\n                  className=\" card is-card-dark \"\n                  style={{ flexDirection: \"row\" }}\n                >\n                  <div className=\"dashboard-title\">\n                    {\" \"}\n                    Coronavirus COVID-19 Global and Arab World Cases Dashboard\n                  </div>\n                  <div className=\" change-region\">\n                    <Dropdown>\n                      <Dropdown.Toggle\n                        variant=\"outline-dark\"\n                        id=\"dropdown-basic\"\n                      >\n                        {!this.state.language ? \"Region\" : \"المنطقة\"}\n                      </Dropdown.Toggle>\n\n                      <Dropdown.Menu>\n                        <Dropdown.Item\n                          onClick={() => this.setState({ region: true })}\n                        >\n                          {!this.state.language ? \"Global\" : \"جميع الدول\"}\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onClick={() => this.setState({ region: false })}\n                        >\n                          {!this.state.language\n                            ? \"Arab World\"\n                            : \"الدول العربية\"}\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n\n                    <Dropdown>\n                      {\" \"}\n                      <Dropdown.Toggle\n                        variant=\"outline-dark\"\n                        id=\"dropdown-basic\"\n                      >\n                        {!this.state.language ? \"Language\" : \"اللغة\"}\n                      </Dropdown.Toggle>\n                      <Dropdown.Menu>\n                        <Dropdown.Item\n                          onClick={() => this.props.changeLanguage(false)}\n                        >\n                          <div className=\"region-title\">\n                            {!this.state.language ? \"اللغة العربية\" : \"English\"}\n                          </div>\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onClick={() => this.props.changeLanguage(true)}\n                        >\n                          {!this.state.language\n                            ? \"English\"\n                            : \"اللغة الإنجليزية\"}\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </div>\n                </Container>\n              </Container>\n            </Container>\n            {/* row 1  */}\n            <Container className=\"row\">\n              {/* counter list  */}\n              <Container className=\"col-lg-2 col-sm-6 is-light-text mb-3 small-padding\">\n                <Container className=\"card grid-card is-card-dark\">\n                  <TotalCounter\n                    data={\n                      this.state.region\n                        ? [\n                            totalConfirmedMENA,\n                            totalDeathsMENA,\n                            totalRecoveredMENA\n                          ]\n                        : [totalConfirmed, totalDeaths, totalRecovered]\n                    }\n                    language={this.props.language}\n                  />\n                </Container>\n              </Container>\n              {/* counter  */}\n              <Container className=\"col-lg-2 col-sm-6 is-light-text mb-3 small-padding\">\n                <Container className=\"card grid-card is-card-dark\">\n                  <Counter\n                    data={\n                      this.state.region\n                        ? [confirmedDataMENA, deathsDataMENA, recoveredDataMENA]\n                        : [confirmedData, deathsData, recoveredData]\n                    }\n                    loading={this.state.loading}\n                    language={this.props.language}\n                  />\n                </Container>\n              </Container>\n\n              {/* timegraph  */}\n              <Container className=\"col-lg-5 col-sm-6 is-light-text mb-3 small-padding\">\n                <Container className=\"card grid-card is-card-dark\">\n                  <TimeGraph\n                    data={this.state.timeData}\n                    loading={this.state.loading}\n                    language={this.props.language}\n                  />\n                </Container>\n              </Container>\n              {/* pie chart  */}\n              <Container className=\"col-lg-3 col-sm-6 is-light-text mb-3 small-padding\">\n                <Container className=\"card grid-card is-card-dark\">\n                  <PieChart\n                    data={[confirmedData, deathsData, recoveredData]}\n                    loading={this.state.loading}\n                    language={this.props.language}\n                  />\n                </Container>\n              </Container>\n            </Container>\n\n            {/* row 2  */}\n\n            <Container className=\"row\">\n              <Container className=\"col-md-4 col-lg-6 is-light-text mb-3 small-padding \">\n                <Container className=\"card is-card-dark map-card\">\n                  <MapChart\n                    data={this.state.region ? confirmedDataMENA : confirmedData}\n                    loading={this.state.loading}\n                    region={this.state.region}\n                    language={this.props.language}\n                  />\n                </Container>\n              </Container>\n\n              <Container className=\"col-md-4 col-lg-6 is-light-text mb-3 small-padding\">\n                <Container className=\"card is-card-dark info-card\">\n                  <CountryInfo\n                    global={this.state.global.result}\n                    language={this.props.language}\n                  />\n                </Container>\n              </Container>\n            </Container>\n\n            {/* footer */}\n            <Container className=\"row\">\n              <Container className=\"col-md-4 col-lg-2 is-light-text mb-2 small-padding\">\n                <Container className=\"card footer-card is-card-dark\">\n                  <LastUpdated language={this.props.language} />\n                </Container>\n              </Container>\n\n              <Container className=\"col-md-4 col-lg-10 is-light-text mb-2 small-padding\">\n                <Container className=\"card is-card-dark footer-card\">\n                  <Footer language={this.props.language} />\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n        </Container>\n      );\n    } else {\n      return (\n        <div>\n          {\" \"}\n          <Loading />\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.data.language\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeLanguage: language => dispatch(changeLanguage(language))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}